// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "aes_mix_columns84142.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic aes_mix_columns84142::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic aes_mix_columns84142::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state1 = "1";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state2 = "10";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state3 = "100";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state4 = "1000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state5 = "10000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state6 = "100000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state7 = "1000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state8 = "10000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state9 = "100000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state10 = "1000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state11 = "10000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state12 = "100000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<34> aes_mix_columns84142::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> aes_mix_columns84142::ap_const_lv1_0 = "0";
const sc_lv<3> aes_mix_columns84142::ap_const_lv3_0 = "000";
const sc_lv<2> aes_mix_columns84142::ap_const_lv2_0 = "00";
const sc_lv<4> aes_mix_columns84142::ap_const_lv4_0 = "0000";
const sc_lv<16> aes_mix_columns84142::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_5 = "101";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_C = "1100";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_D = "1101";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_15 = "10101";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_E = "1110";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_16 = "10110";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_10 = "10000";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_17 = "10111";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_1E = "11110";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_18 = "11000";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_1F = "11111";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_19 = "11001";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_20 = "100000";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_1 = "1";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_2 = "10";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_3 = "11";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_4 = "100";
const sc_lv<1> aes_mix_columns84142::ap_const_lv1_1 = "1";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_21 = "100001";
const bool aes_mix_columns84142::ap_const_boolean_0 = false;
const sc_lv<3> aes_mix_columns84142::ap_const_lv3_4 = "100";
const sc_lv<3> aes_mix_columns84142::ap_const_lv3_1 = "1";
const sc_lv<61> aes_mix_columns84142::ap_const_lv61_1 = "1";
const sc_lv<64> aes_mix_columns84142::ap_const_lv64_1 = "1";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_3F = "111111";
const sc_lv<64> aes_mix_columns84142::ap_const_lv64_2 = "10";
const sc_lv<64> aes_mix_columns84142::ap_const_lv64_3 = "11";
const sc_lv<16> aes_mix_columns84142::ap_const_lv16_8 = "1000";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_11 = "10001";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_8 = "1000";
const sc_lv<32> aes_mix_columns84142::ap_const_lv32_F = "1111";
const sc_lv<8> aes_mix_columns84142::ap_const_lv8_0 = "00000000";
const bool aes_mix_columns84142::ap_const_boolean_1 = true;

aes_mix_columns84142::aes_mix_columns84142(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln180_fu_361_p2);
    sensitive << ( zext_ln180_reg_903 );
    sensitive << ( zext_ln180_30_fu_357_p1 );

    SC_METHOD(thread_add_ln544_5_fu_400_p2);
    sensitive << ( zext_ln544_reg_842 );
    sensitive << ( zext_ln544_5_fu_396_p1 );

    SC_METHOD(thread_add_ln544_6_fu_431_p2);
    sensitive << ( zext_ln544_reg_842 );
    sensitive << ( zext_ln544_6_fu_427_p1 );

    SC_METHOD(thread_add_ln544_7_fu_493_p2);
    sensitive << ( zext_ln544_reg_842 );
    sensitive << ( zext_ln544_8_fu_489_p1 );

    SC_METHOD(thread_add_ln544_fu_462_p2);
    sensitive << ( zext_ln544_reg_842 );
    sensitive << ( zext_ln544_7_fu_458_p1 );

    SC_METHOD(thread_add_ln719_10_fu_689_p2);
    sensitive << ( zext_ln78_reg_850 );
    sensitive << ( zext_ln719_12_fu_685_p1 );

    SC_METHOD(thread_add_ln719_17_fu_729_p2);
    sensitive << ( state_matrix_V_load_1_reg_897 );
    sensitive << ( tmp_39_reg_1001 );

    SC_METHOD(thread_add_ln719_18_fu_768_p2);
    sensitive << ( state_matrix_V_load_2_reg_908 );
    sensitive << ( shl_ln719_reg_1017 );

    SC_METHOD(thread_add_ln719_19_fu_797_p2);
    sensitive << ( state_matrix_V_load_3_reg_913 );
    sensitive << ( tmp_45_reg_1033 );

    SC_METHOD(thread_add_ln719_6_fu_591_p2);
    sensitive << ( zext_ln78_reg_850 );
    sensitive << ( zext_ln719_8_fu_587_p1 );

    SC_METHOD(thread_add_ln719_7_fu_611_p2);
    sensitive << ( sext_ln544_8_reg_928 );
    sensitive << ( zext_ln719_14_fu_607_p1 );

    SC_METHOD(thread_add_ln719_8_fu_634_p2);
    sensitive << ( zext_ln78_reg_850 );
    sensitive << ( zext_ln719_10_fu_630_p1 );

    SC_METHOD(thread_add_ln719_9_fu_666_p2);
    sensitive << ( sext_ln103_reg_933 );
    sensitive << ( zext_ln719_15_fu_662_p1 );

    SC_METHOD(thread_add_ln719_fu_568_p2);
    sensitive << ( sext_ln544_7_reg_923 );
    sensitive << ( zext_ln719_13_fu_564_p1 );

    SC_METHOD(thread_add_ln78_3_fu_536_p2);
    sensitive << ( zext_ln78_reg_850 );
    sensitive << ( zext_ln78_4_fu_532_p1 );

    SC_METHOD(thread_add_ln78_6_fu_700_p2);
    sensitive << ( state_matrix_V_load_reg_891 );
    sensitive << ( shl_ln78_reg_980 );

    SC_METHOD(thread_add_ln78_fu_513_p2);
    sensitive << ( sext_ln544_reg_918 );
    sensitive << ( zext_ln78_5_fu_509_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state15_io);
    sensitive << ( m_axi_constant_matrix_V_ARREADY );
    sensitive << ( m_axi_multiplication_V_ARREADY );

    SC_METHOD(thread_ap_block_state22);
    sensitive << ( m_axi_constant_matrix_V_RVALID );
    sensitive << ( m_axi_multiplication_V_RVALID );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln96_fu_274_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln96_fu_274_p2 );

    SC_METHOD(thread_column_index_fu_280_p2);
    sensitive << ( column_index_0_reg_243 );

    SC_METHOD(thread_constant_matrix_V_blk_n_AR);
    sensitive << ( m_axi_constant_matrix_V_ARREADY );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_constant_matrix_V_blk_n_R);
    sensitive << ( m_axi_constant_matrix_V_RVALID );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_empty_48_fu_704_p1);
    sensitive << ( add_ln78_6_fu_700_p2 );

    SC_METHOD(thread_empty_49_fu_733_p1);
    sensitive << ( add_ln719_17_fu_729_p2 );

    SC_METHOD(thread_empty_50_fu_772_p1);
    sensitive << ( add_ln719_18_fu_768_p2 );

    SC_METHOD(thread_empty_51_fu_801_p1);
    sensitive << ( add_ln719_19_fu_797_p2 );

    SC_METHOD(thread_icmp_ln103_fu_337_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( row_index_0_reg_255 );

    SC_METHOD(thread_icmp_ln96_fu_274_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( column_index_0_reg_243 );

    SC_METHOD(thread_lshr_ln719_3_fu_788_p2);
    sensitive << ( multiplication_V_add_19_reg_1049 );
    sensitive << ( tmp_65_fu_784_p1 );

    SC_METHOD(thread_lshr_ln719_4_fu_817_p2);
    sensitive << ( multiplication_V_add_21_reg_1059 );
    sensitive << ( tmp_70_fu_813_p1 );

    SC_METHOD(thread_lshr_ln719_fu_749_p2);
    sensitive << ( multiplication_V_add_17_reg_1044 );
    sensitive << ( tmp_60_fu_745_p1 );

    SC_METHOD(thread_lshr_ln78_fu_720_p2);
    sensitive << ( multiplication_V_add_15_reg_991 );
    sensitive << ( tmp_55_fu_716_p1 );

    SC_METHOD(thread_m_axi_constant_matrix_V_ARADDR);
    sensitive << ( m_axi_constant_matrix_V_ARREADY );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( constant_matrix_V_ad_reg_951 );
    sensitive << ( constant_matrix_V_ad_15_reg_957 );
    sensitive << ( constant_matrix_V_ad_16_reg_963 );
    sensitive << ( constant_matrix_V_ad_17_reg_969 );
    sensitive << ( ap_block_state15_io );

    SC_METHOD(thread_m_axi_constant_matrix_V_ARBURST);

    SC_METHOD(thread_m_axi_constant_matrix_V_ARCACHE);

    SC_METHOD(thread_m_axi_constant_matrix_V_ARID);

    SC_METHOD(thread_m_axi_constant_matrix_V_ARLEN);
    sensitive << ( m_axi_constant_matrix_V_ARREADY );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_block_state15_io );

    SC_METHOD(thread_m_axi_constant_matrix_V_ARLOCK);

    SC_METHOD(thread_m_axi_constant_matrix_V_ARPROT);

    SC_METHOD(thread_m_axi_constant_matrix_V_ARQOS);

    SC_METHOD(thread_m_axi_constant_matrix_V_ARREGION);

    SC_METHOD(thread_m_axi_constant_matrix_V_ARSIZE);

    SC_METHOD(thread_m_axi_constant_matrix_V_ARUSER);

    SC_METHOD(thread_m_axi_constant_matrix_V_ARVALID);
    sensitive << ( m_axi_constant_matrix_V_ARREADY );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_block_state15_io );

    SC_METHOD(thread_m_axi_constant_matrix_V_AWADDR);

    SC_METHOD(thread_m_axi_constant_matrix_V_AWBURST);

    SC_METHOD(thread_m_axi_constant_matrix_V_AWCACHE);

    SC_METHOD(thread_m_axi_constant_matrix_V_AWID);

    SC_METHOD(thread_m_axi_constant_matrix_V_AWLEN);

    SC_METHOD(thread_m_axi_constant_matrix_V_AWLOCK);

    SC_METHOD(thread_m_axi_constant_matrix_V_AWPROT);

    SC_METHOD(thread_m_axi_constant_matrix_V_AWQOS);

    SC_METHOD(thread_m_axi_constant_matrix_V_AWREGION);

    SC_METHOD(thread_m_axi_constant_matrix_V_AWSIZE);

    SC_METHOD(thread_m_axi_constant_matrix_V_AWUSER);

    SC_METHOD(thread_m_axi_constant_matrix_V_AWVALID);

    SC_METHOD(thread_m_axi_constant_matrix_V_BREADY);

    SC_METHOD(thread_m_axi_constant_matrix_V_RREADY);
    sensitive << ( m_axi_constant_matrix_V_RVALID );
    sensitive << ( m_axi_multiplication_V_ARREADY );
    sensitive << ( m_axi_multiplication_V_RVALID );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_m_axi_constant_matrix_V_WDATA);

    SC_METHOD(thread_m_axi_constant_matrix_V_WID);

    SC_METHOD(thread_m_axi_constant_matrix_V_WLAST);

    SC_METHOD(thread_m_axi_constant_matrix_V_WSTRB);

    SC_METHOD(thread_m_axi_constant_matrix_V_WUSER);

    SC_METHOD(thread_m_axi_constant_matrix_V_WVALID);

    SC_METHOD(thread_m_axi_multiplication_V_ARADDR);
    sensitive << ( m_axi_constant_matrix_V_RVALID );
    sensitive << ( m_axi_multiplication_V_ARREADY );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( multiplication_V_add_reg_985 );
    sensitive << ( multiplication_V_add_16_reg_1006 );
    sensitive << ( multiplication_V_add_18_reg_1022 );
    sensitive << ( multiplication_V_add_20_reg_1038 );
    sensitive << ( ap_block_state15_io );

    SC_METHOD(thread_m_axi_multiplication_V_ARBURST);

    SC_METHOD(thread_m_axi_multiplication_V_ARCACHE);

    SC_METHOD(thread_m_axi_multiplication_V_ARID);

    SC_METHOD(thread_m_axi_multiplication_V_ARLEN);
    sensitive << ( m_axi_constant_matrix_V_RVALID );
    sensitive << ( m_axi_multiplication_V_ARREADY );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_block_state15_io );

    SC_METHOD(thread_m_axi_multiplication_V_ARLOCK);

    SC_METHOD(thread_m_axi_multiplication_V_ARPROT);

    SC_METHOD(thread_m_axi_multiplication_V_ARQOS);

    SC_METHOD(thread_m_axi_multiplication_V_ARREGION);

    SC_METHOD(thread_m_axi_multiplication_V_ARSIZE);

    SC_METHOD(thread_m_axi_multiplication_V_ARUSER);

    SC_METHOD(thread_m_axi_multiplication_V_ARVALID);
    sensitive << ( m_axi_constant_matrix_V_RVALID );
    sensitive << ( m_axi_multiplication_V_ARREADY );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_block_state15_io );

    SC_METHOD(thread_m_axi_multiplication_V_AWADDR);

    SC_METHOD(thread_m_axi_multiplication_V_AWBURST);

    SC_METHOD(thread_m_axi_multiplication_V_AWCACHE);

    SC_METHOD(thread_m_axi_multiplication_V_AWID);

    SC_METHOD(thread_m_axi_multiplication_V_AWLEN);

    SC_METHOD(thread_m_axi_multiplication_V_AWLOCK);

    SC_METHOD(thread_m_axi_multiplication_V_AWPROT);

    SC_METHOD(thread_m_axi_multiplication_V_AWQOS);

    SC_METHOD(thread_m_axi_multiplication_V_AWREGION);

    SC_METHOD(thread_m_axi_multiplication_V_AWSIZE);

    SC_METHOD(thread_m_axi_multiplication_V_AWUSER);

    SC_METHOD(thread_m_axi_multiplication_V_AWVALID);

    SC_METHOD(thread_m_axi_multiplication_V_BREADY);

    SC_METHOD(thread_m_axi_multiplication_V_RREADY);
    sensitive << ( m_axi_constant_matrix_V_RVALID );
    sensitive << ( m_axi_multiplication_V_RVALID );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_m_axi_multiplication_V_WDATA);

    SC_METHOD(thread_m_axi_multiplication_V_WID);

    SC_METHOD(thread_m_axi_multiplication_V_WLAST);

    SC_METHOD(thread_m_axi_multiplication_V_WSTRB);

    SC_METHOD(thread_m_axi_multiplication_V_WUSER);

    SC_METHOD(thread_m_axi_multiplication_V_WVALID);

    SC_METHOD(thread_multiplication_V_blk_n_AR);
    sensitive << ( m_axi_multiplication_V_ARREADY );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_multiplication_V_blk_n_R);
    sensitive << ( m_axi_multiplication_V_RVALID );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_or_ln544_3_fu_442_p2);
    sensitive << ( sext_ln544_9_fu_380_p1 );

    SC_METHOD(thread_or_ln544_4_fu_473_p2);
    sensitive << ( sext_ln544_9_fu_380_p1 );

    SC_METHOD(thread_or_ln544_fu_411_p2);
    sensitive << ( sext_ln544_9_fu_380_p1 );

    SC_METHOD(thread_row_index_fu_343_p2);
    sensitive << ( row_index_0_reg_255 );

    SC_METHOD(thread_sext_ln103_fu_333_p0);
    sensitive << ( state_matrix_V_q1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sext_ln103_fu_333_p1);
    sensitive << ( sext_ln103_fu_333_p0 );

    SC_METHOD(thread_sext_ln180_fu_311_p1);
    sensitive << ( xor_ln180_reg_871 );

    SC_METHOD(thread_sext_ln544_10_fu_392_p1);
    sensitive << ( tmp_34_fu_384_p3 );

    SC_METHOD(thread_sext_ln544_7_fu_326_p1);
    sensitive << ( state_matrix_V_load_1_reg_897 );

    SC_METHOD(thread_sext_ln544_8_fu_329_p0);
    sensitive << ( state_matrix_V_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sext_ln544_8_fu_329_p1);
    sensitive << ( sext_ln544_8_fu_329_p0 );

    SC_METHOD(thread_sext_ln544_9_fu_380_p1);
    sensitive << ( tmp_33_fu_372_p3 );

    SC_METHOD(thread_sext_ln544_fu_323_p1);
    sensitive << ( state_matrix_V_load_reg_891 );

    SC_METHOD(thread_sext_ln719_5_fu_626_p1);
    sensitive << ( tmp_42_fu_616_p4 );

    SC_METHOD(thread_sext_ln719_6_fu_681_p1);
    sensitive << ( tmp_46_fu_671_p4 );

    SC_METHOD(thread_sext_ln719_fu_583_p1);
    sensitive << ( tmp_40_fu_573_p4 );

    SC_METHOD(thread_sext_ln78_fu_528_p1);
    sensitive << ( tmp_36_fu_518_p4 );

    SC_METHOD(thread_shl_ln719_fu_602_p2);
    sensitive << ( constant_matrix_V_ad_20_reg_1012 );

    SC_METHOD(thread_shl_ln78_fu_504_p2);
    sensitive << ( constant_matrix_V_ad_18_reg_975 );

    SC_METHOD(thread_state_matrix_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( zext_ln99_fu_286_p1 );
    sensitive << ( tmp_fu_302_p3 );
    sensitive << ( zext_ln180_31_fu_764_p1 );

    SC_METHOD(thread_state_matrix_V_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln180_28_fu_297_p1 );
    sensitive << ( zext_ln180_29_fu_314_p1 );

    SC_METHOD(thread_state_matrix_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_state_matrix_V_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_state_matrix_V_d0);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( xor_ln719_2_fu_832_p2 );

    SC_METHOD(thread_state_matrix_V_we0);
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_tmp_31_fu_417_p4);
    sensitive << ( or_ln544_fu_411_p2 );

    SC_METHOD(thread_tmp_32_fu_448_p4);
    sensitive << ( or_ln544_3_fu_442_p2 );

    SC_METHOD(thread_tmp_33_fu_372_p3);
    sensitive << ( xor_ln544_fu_366_p2 );

    SC_METHOD(thread_tmp_34_fu_384_p3);
    sensitive << ( xor_ln544_fu_366_p2 );

    SC_METHOD(thread_tmp_35_fu_479_p4);
    sensitive << ( or_ln544_4_fu_473_p2 );

    SC_METHOD(thread_tmp_36_fu_518_p4);
    sensitive << ( add_ln78_fu_513_p2 );

    SC_METHOD(thread_tmp_37_fu_708_p3);
    sensitive << ( empty_48_fu_704_p1 );

    SC_METHOD(thread_tmp_39_fu_557_p3);
    sensitive << ( tmp_38_reg_996 );

    SC_METHOD(thread_tmp_40_fu_573_p4);
    sensitive << ( add_ln719_fu_568_p2 );

    SC_METHOD(thread_tmp_41_fu_737_p3);
    sensitive << ( empty_49_fu_733_p1 );

    SC_METHOD(thread_tmp_42_fu_616_p4);
    sensitive << ( add_ln719_7_fu_611_p2 );

    SC_METHOD(thread_tmp_43_fu_776_p3);
    sensitive << ( empty_50_fu_772_p1 );

    SC_METHOD(thread_tmp_45_fu_655_p3);
    sensitive << ( tmp_44_reg_1028 );

    SC_METHOD(thread_tmp_46_fu_671_p4);
    sensitive << ( add_ln719_9_fu_666_p2 );

    SC_METHOD(thread_tmp_47_fu_805_p3);
    sensitive << ( empty_51_fu_801_p1 );

    SC_METHOD(thread_tmp_55_fu_716_p1);
    sensitive << ( tmp_37_fu_708_p3 );

    SC_METHOD(thread_tmp_60_fu_745_p1);
    sensitive << ( tmp_41_fu_737_p3 );

    SC_METHOD(thread_tmp_65_fu_784_p1);
    sensitive << ( tmp_43_fu_776_p3 );

    SC_METHOD(thread_tmp_70_fu_813_p1);
    sensitive << ( tmp_47_fu_805_p3 );

    SC_METHOD(thread_tmp_fu_302_p3);
    sensitive << ( column_index_0_reg_243 );

    SC_METHOD(thread_tmp_s_fu_349_p3);
    sensitive << ( row_index_0_reg_255 );

    SC_METHOD(thread_trunc_ln719_5_fu_793_p1);
    sensitive << ( lshr_ln719_3_fu_788_p2 );

    SC_METHOD(thread_trunc_ln719_6_fu_822_p1);
    sensitive << ( lshr_ln719_4_fu_817_p2 );

    SC_METHOD(thread_trunc_ln719_fu_754_p1);
    sensitive << ( lshr_ln719_fu_749_p2 );

    SC_METHOD(thread_trunc_ln78_fu_725_p1);
    sensitive << ( lshr_ln78_fu_720_p2 );

    SC_METHOD(thread_xor_ln180_fu_291_p2);
    sensitive << ( column_index_0_reg_243 );

    SC_METHOD(thread_xor_ln544_fu_366_p2);
    sensitive << ( row_index_0_reg_255 );

    SC_METHOD(thread_xor_ln719_1_fu_826_p2);
    sensitive << ( trunc_ln719_5_fu_793_p1 );
    sensitive << ( trunc_ln719_6_fu_822_p1 );

    SC_METHOD(thread_xor_ln719_2_fu_832_p2);
    sensitive << ( xor_ln719_reg_1054 );
    sensitive << ( xor_ln719_1_fu_826_p2 );

    SC_METHOD(thread_xor_ln719_fu_758_p2);
    sensitive << ( trunc_ln719_fu_754_p1 );
    sensitive << ( trunc_ln78_fu_725_p1 );

    SC_METHOD(thread_zext_ln180_28_fu_297_p1);
    sensitive << ( xor_ln180_fu_291_p2 );

    SC_METHOD(thread_zext_ln180_29_fu_314_p1);
    sensitive << ( sext_ln180_fu_311_p1 );

    SC_METHOD(thread_zext_ln180_30_fu_357_p1);
    sensitive << ( tmp_s_fu_349_p3 );

    SC_METHOD(thread_zext_ln180_31_fu_764_p1);
    sensitive << ( add_ln180_reg_946 );

    SC_METHOD(thread_zext_ln180_fu_319_p1);
    sensitive << ( column_index_0_reg_243 );

    SC_METHOD(thread_zext_ln544_5_fu_396_p1);
    sensitive << ( sext_ln544_10_fu_392_p1 );

    SC_METHOD(thread_zext_ln544_6_fu_427_p1);
    sensitive << ( tmp_31_fu_417_p4 );

    SC_METHOD(thread_zext_ln544_7_fu_458_p1);
    sensitive << ( tmp_32_fu_448_p4 );

    SC_METHOD(thread_zext_ln544_8_fu_489_p1);
    sensitive << ( tmp_35_fu_479_p4 );

    SC_METHOD(thread_zext_ln544_fu_266_p1);
    sensitive << ( constant_matrix_V_offset );

    SC_METHOD(thread_zext_ln719_10_fu_630_p1);
    sensitive << ( sext_ln719_5_fu_626_p1 );

    SC_METHOD(thread_zext_ln719_12_fu_685_p1);
    sensitive << ( sext_ln719_6_fu_681_p1 );

    SC_METHOD(thread_zext_ln719_13_fu_564_p1);
    sensitive << ( tmp_39_fu_557_p3 );

    SC_METHOD(thread_zext_ln719_14_fu_607_p1);
    sensitive << ( shl_ln719_fu_602_p2 );

    SC_METHOD(thread_zext_ln719_15_fu_662_p1);
    sensitive << ( tmp_45_fu_655_p3 );

    SC_METHOD(thread_zext_ln719_8_fu_587_p1);
    sensitive << ( sext_ln719_fu_583_p1 );

    SC_METHOD(thread_zext_ln78_4_fu_532_p1);
    sensitive << ( sext_ln78_fu_528_p1 );

    SC_METHOD(thread_zext_ln78_5_fu_509_p1);
    sensitive << ( shl_ln78_fu_504_p2 );

    SC_METHOD(thread_zext_ln78_fu_270_p1);
    sensitive << ( multiplication_V_offset );

    SC_METHOD(thread_zext_ln99_fu_286_p1);
    sensitive << ( column_index_0_reg_243 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_constant_matrix_V_ARREADY );
    sensitive << ( m_axi_constant_matrix_V_RVALID );
    sensitive << ( m_axi_multiplication_V_ARREADY );
    sensitive << ( m_axi_multiplication_V_RVALID );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln96_fu_274_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln103_fu_337_p2 );
    sensitive << ( ap_block_state15_io );

    ap_CS_fsm = "0000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "aes_mix_columns84142_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, state_matrix_V_address0, "(port)state_matrix_V_address0");
    sc_trace(mVcdFile, state_matrix_V_ce0, "(port)state_matrix_V_ce0");
    sc_trace(mVcdFile, state_matrix_V_we0, "(port)state_matrix_V_we0");
    sc_trace(mVcdFile, state_matrix_V_d0, "(port)state_matrix_V_d0");
    sc_trace(mVcdFile, state_matrix_V_q0, "(port)state_matrix_V_q0");
    sc_trace(mVcdFile, state_matrix_V_address1, "(port)state_matrix_V_address1");
    sc_trace(mVcdFile, state_matrix_V_ce1, "(port)state_matrix_V_ce1");
    sc_trace(mVcdFile, state_matrix_V_q1, "(port)state_matrix_V_q1");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_AWVALID, "(port)m_axi_constant_matrix_V_AWVALID");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_AWREADY, "(port)m_axi_constant_matrix_V_AWREADY");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_AWADDR, "(port)m_axi_constant_matrix_V_AWADDR");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_AWID, "(port)m_axi_constant_matrix_V_AWID");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_AWLEN, "(port)m_axi_constant_matrix_V_AWLEN");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_AWSIZE, "(port)m_axi_constant_matrix_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_AWBURST, "(port)m_axi_constant_matrix_V_AWBURST");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_AWLOCK, "(port)m_axi_constant_matrix_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_AWCACHE, "(port)m_axi_constant_matrix_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_AWPROT, "(port)m_axi_constant_matrix_V_AWPROT");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_AWQOS, "(port)m_axi_constant_matrix_V_AWQOS");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_AWREGION, "(port)m_axi_constant_matrix_V_AWREGION");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_AWUSER, "(port)m_axi_constant_matrix_V_AWUSER");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_WVALID, "(port)m_axi_constant_matrix_V_WVALID");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_WREADY, "(port)m_axi_constant_matrix_V_WREADY");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_WDATA, "(port)m_axi_constant_matrix_V_WDATA");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_WSTRB, "(port)m_axi_constant_matrix_V_WSTRB");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_WLAST, "(port)m_axi_constant_matrix_V_WLAST");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_WID, "(port)m_axi_constant_matrix_V_WID");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_WUSER, "(port)m_axi_constant_matrix_V_WUSER");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_ARVALID, "(port)m_axi_constant_matrix_V_ARVALID");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_ARREADY, "(port)m_axi_constant_matrix_V_ARREADY");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_ARADDR, "(port)m_axi_constant_matrix_V_ARADDR");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_ARID, "(port)m_axi_constant_matrix_V_ARID");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_ARLEN, "(port)m_axi_constant_matrix_V_ARLEN");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_ARSIZE, "(port)m_axi_constant_matrix_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_ARBURST, "(port)m_axi_constant_matrix_V_ARBURST");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_ARLOCK, "(port)m_axi_constant_matrix_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_ARCACHE, "(port)m_axi_constant_matrix_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_ARPROT, "(port)m_axi_constant_matrix_V_ARPROT");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_ARQOS, "(port)m_axi_constant_matrix_V_ARQOS");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_ARREGION, "(port)m_axi_constant_matrix_V_ARREGION");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_ARUSER, "(port)m_axi_constant_matrix_V_ARUSER");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_RVALID, "(port)m_axi_constant_matrix_V_RVALID");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_RREADY, "(port)m_axi_constant_matrix_V_RREADY");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_RDATA, "(port)m_axi_constant_matrix_V_RDATA");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_RLAST, "(port)m_axi_constant_matrix_V_RLAST");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_RID, "(port)m_axi_constant_matrix_V_RID");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_RUSER, "(port)m_axi_constant_matrix_V_RUSER");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_RRESP, "(port)m_axi_constant_matrix_V_RRESP");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_BVALID, "(port)m_axi_constant_matrix_V_BVALID");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_BREADY, "(port)m_axi_constant_matrix_V_BREADY");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_BRESP, "(port)m_axi_constant_matrix_V_BRESP");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_BID, "(port)m_axi_constant_matrix_V_BID");
    sc_trace(mVcdFile, m_axi_constant_matrix_V_BUSER, "(port)m_axi_constant_matrix_V_BUSER");
    sc_trace(mVcdFile, constant_matrix_V_offset, "(port)constant_matrix_V_offset");
    sc_trace(mVcdFile, m_axi_multiplication_V_AWVALID, "(port)m_axi_multiplication_V_AWVALID");
    sc_trace(mVcdFile, m_axi_multiplication_V_AWREADY, "(port)m_axi_multiplication_V_AWREADY");
    sc_trace(mVcdFile, m_axi_multiplication_V_AWADDR, "(port)m_axi_multiplication_V_AWADDR");
    sc_trace(mVcdFile, m_axi_multiplication_V_AWID, "(port)m_axi_multiplication_V_AWID");
    sc_trace(mVcdFile, m_axi_multiplication_V_AWLEN, "(port)m_axi_multiplication_V_AWLEN");
    sc_trace(mVcdFile, m_axi_multiplication_V_AWSIZE, "(port)m_axi_multiplication_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_multiplication_V_AWBURST, "(port)m_axi_multiplication_V_AWBURST");
    sc_trace(mVcdFile, m_axi_multiplication_V_AWLOCK, "(port)m_axi_multiplication_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_multiplication_V_AWCACHE, "(port)m_axi_multiplication_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_multiplication_V_AWPROT, "(port)m_axi_multiplication_V_AWPROT");
    sc_trace(mVcdFile, m_axi_multiplication_V_AWQOS, "(port)m_axi_multiplication_V_AWQOS");
    sc_trace(mVcdFile, m_axi_multiplication_V_AWREGION, "(port)m_axi_multiplication_V_AWREGION");
    sc_trace(mVcdFile, m_axi_multiplication_V_AWUSER, "(port)m_axi_multiplication_V_AWUSER");
    sc_trace(mVcdFile, m_axi_multiplication_V_WVALID, "(port)m_axi_multiplication_V_WVALID");
    sc_trace(mVcdFile, m_axi_multiplication_V_WREADY, "(port)m_axi_multiplication_V_WREADY");
    sc_trace(mVcdFile, m_axi_multiplication_V_WDATA, "(port)m_axi_multiplication_V_WDATA");
    sc_trace(mVcdFile, m_axi_multiplication_V_WSTRB, "(port)m_axi_multiplication_V_WSTRB");
    sc_trace(mVcdFile, m_axi_multiplication_V_WLAST, "(port)m_axi_multiplication_V_WLAST");
    sc_trace(mVcdFile, m_axi_multiplication_V_WID, "(port)m_axi_multiplication_V_WID");
    sc_trace(mVcdFile, m_axi_multiplication_V_WUSER, "(port)m_axi_multiplication_V_WUSER");
    sc_trace(mVcdFile, m_axi_multiplication_V_ARVALID, "(port)m_axi_multiplication_V_ARVALID");
    sc_trace(mVcdFile, m_axi_multiplication_V_ARREADY, "(port)m_axi_multiplication_V_ARREADY");
    sc_trace(mVcdFile, m_axi_multiplication_V_ARADDR, "(port)m_axi_multiplication_V_ARADDR");
    sc_trace(mVcdFile, m_axi_multiplication_V_ARID, "(port)m_axi_multiplication_V_ARID");
    sc_trace(mVcdFile, m_axi_multiplication_V_ARLEN, "(port)m_axi_multiplication_V_ARLEN");
    sc_trace(mVcdFile, m_axi_multiplication_V_ARSIZE, "(port)m_axi_multiplication_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_multiplication_V_ARBURST, "(port)m_axi_multiplication_V_ARBURST");
    sc_trace(mVcdFile, m_axi_multiplication_V_ARLOCK, "(port)m_axi_multiplication_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_multiplication_V_ARCACHE, "(port)m_axi_multiplication_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_multiplication_V_ARPROT, "(port)m_axi_multiplication_V_ARPROT");
    sc_trace(mVcdFile, m_axi_multiplication_V_ARQOS, "(port)m_axi_multiplication_V_ARQOS");
    sc_trace(mVcdFile, m_axi_multiplication_V_ARREGION, "(port)m_axi_multiplication_V_ARREGION");
    sc_trace(mVcdFile, m_axi_multiplication_V_ARUSER, "(port)m_axi_multiplication_V_ARUSER");
    sc_trace(mVcdFile, m_axi_multiplication_V_RVALID, "(port)m_axi_multiplication_V_RVALID");
    sc_trace(mVcdFile, m_axi_multiplication_V_RREADY, "(port)m_axi_multiplication_V_RREADY");
    sc_trace(mVcdFile, m_axi_multiplication_V_RDATA, "(port)m_axi_multiplication_V_RDATA");
    sc_trace(mVcdFile, m_axi_multiplication_V_RLAST, "(port)m_axi_multiplication_V_RLAST");
    sc_trace(mVcdFile, m_axi_multiplication_V_RID, "(port)m_axi_multiplication_V_RID");
    sc_trace(mVcdFile, m_axi_multiplication_V_RUSER, "(port)m_axi_multiplication_V_RUSER");
    sc_trace(mVcdFile, m_axi_multiplication_V_RRESP, "(port)m_axi_multiplication_V_RRESP");
    sc_trace(mVcdFile, m_axi_multiplication_V_BVALID, "(port)m_axi_multiplication_V_BVALID");
    sc_trace(mVcdFile, m_axi_multiplication_V_BREADY, "(port)m_axi_multiplication_V_BREADY");
    sc_trace(mVcdFile, m_axi_multiplication_V_BRESP, "(port)m_axi_multiplication_V_BRESP");
    sc_trace(mVcdFile, m_axi_multiplication_V_BID, "(port)m_axi_multiplication_V_BID");
    sc_trace(mVcdFile, m_axi_multiplication_V_BUSER, "(port)m_axi_multiplication_V_BUSER");
    sc_trace(mVcdFile, multiplication_V_offset, "(port)multiplication_V_offset");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, constant_matrix_V_blk_n_AR, "constant_matrix_V_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, constant_matrix_V_blk_n_R, "constant_matrix_V_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, multiplication_V_blk_n_AR, "multiplication_V_blk_n_AR");
    sc_trace(mVcdFile, multiplication_V_blk_n_R, "multiplication_V_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, zext_ln544_fu_266_p1, "zext_ln544_fu_266_p1");
    sc_trace(mVcdFile, zext_ln544_reg_842, "zext_ln544_reg_842");
    sc_trace(mVcdFile, zext_ln78_fu_270_p1, "zext_ln78_fu_270_p1");
    sc_trace(mVcdFile, zext_ln78_reg_850, "zext_ln78_reg_850");
    sc_trace(mVcdFile, column_index_fu_280_p2, "column_index_fu_280_p2");
    sc_trace(mVcdFile, column_index_reg_861, "column_index_reg_861");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln96_fu_274_p2, "icmp_ln96_fu_274_p2");
    sc_trace(mVcdFile, xor_ln180_fu_291_p2, "xor_ln180_fu_291_p2");
    sc_trace(mVcdFile, xor_ln180_reg_871, "xor_ln180_reg_871");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, state_matrix_V_load_reg_891, "state_matrix_V_load_reg_891");
    sc_trace(mVcdFile, state_matrix_V_load_1_reg_897, "state_matrix_V_load_1_reg_897");
    sc_trace(mVcdFile, zext_ln180_fu_319_p1, "zext_ln180_fu_319_p1");
    sc_trace(mVcdFile, zext_ln180_reg_903, "zext_ln180_reg_903");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, state_matrix_V_load_2_reg_908, "state_matrix_V_load_2_reg_908");
    sc_trace(mVcdFile, state_matrix_V_load_3_reg_913, "state_matrix_V_load_3_reg_913");
    sc_trace(mVcdFile, sext_ln544_fu_323_p1, "sext_ln544_fu_323_p1");
    sc_trace(mVcdFile, sext_ln544_reg_918, "sext_ln544_reg_918");
    sc_trace(mVcdFile, sext_ln544_7_fu_326_p1, "sext_ln544_7_fu_326_p1");
    sc_trace(mVcdFile, sext_ln544_7_reg_923, "sext_ln544_7_reg_923");
    sc_trace(mVcdFile, sext_ln544_8_fu_329_p1, "sext_ln544_8_fu_329_p1");
    sc_trace(mVcdFile, sext_ln544_8_reg_928, "sext_ln544_8_reg_928");
    sc_trace(mVcdFile, sext_ln103_fu_333_p1, "sext_ln103_fu_333_p1");
    sc_trace(mVcdFile, sext_ln103_reg_933, "sext_ln103_reg_933");
    sc_trace(mVcdFile, row_index_fu_343_p2, "row_index_fu_343_p2");
    sc_trace(mVcdFile, row_index_reg_941, "row_index_reg_941");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln180_fu_361_p2, "add_ln180_fu_361_p2");
    sc_trace(mVcdFile, add_ln180_reg_946, "add_ln180_reg_946");
    sc_trace(mVcdFile, icmp_ln103_fu_337_p2, "icmp_ln103_fu_337_p2");
    sc_trace(mVcdFile, constant_matrix_V_ad_reg_951, "constant_matrix_V_ad_reg_951");
    sc_trace(mVcdFile, constant_matrix_V_ad_15_reg_957, "constant_matrix_V_ad_15_reg_957");
    sc_trace(mVcdFile, constant_matrix_V_ad_16_reg_963, "constant_matrix_V_ad_16_reg_963");
    sc_trace(mVcdFile, constant_matrix_V_ad_17_reg_969, "constant_matrix_V_ad_17_reg_969");
    sc_trace(mVcdFile, constant_matrix_V_ad_18_reg_975, "constant_matrix_V_ad_18_reg_975");
    sc_trace(mVcdFile, shl_ln78_fu_504_p2, "shl_ln78_fu_504_p2");
    sc_trace(mVcdFile, shl_ln78_reg_980, "shl_ln78_reg_980");
    sc_trace(mVcdFile, multiplication_V_add_reg_985, "multiplication_V_add_reg_985");
    sc_trace(mVcdFile, multiplication_V_add_15_reg_991, "multiplication_V_add_15_reg_991");
    sc_trace(mVcdFile, ap_block_state22, "ap_block_state22");
    sc_trace(mVcdFile, tmp_38_reg_996, "tmp_38_reg_996");
    sc_trace(mVcdFile, tmp_39_fu_557_p3, "tmp_39_fu_557_p3");
    sc_trace(mVcdFile, tmp_39_reg_1001, "tmp_39_reg_1001");
    sc_trace(mVcdFile, multiplication_V_add_16_reg_1006, "multiplication_V_add_16_reg_1006");
    sc_trace(mVcdFile, constant_matrix_V_ad_20_reg_1012, "constant_matrix_V_ad_20_reg_1012");
    sc_trace(mVcdFile, shl_ln719_fu_602_p2, "shl_ln719_fu_602_p2");
    sc_trace(mVcdFile, shl_ln719_reg_1017, "shl_ln719_reg_1017");
    sc_trace(mVcdFile, multiplication_V_add_18_reg_1022, "multiplication_V_add_18_reg_1022");
    sc_trace(mVcdFile, tmp_44_reg_1028, "tmp_44_reg_1028");
    sc_trace(mVcdFile, tmp_45_fu_655_p3, "tmp_45_fu_655_p3");
    sc_trace(mVcdFile, tmp_45_reg_1033, "tmp_45_reg_1033");
    sc_trace(mVcdFile, multiplication_V_add_20_reg_1038, "multiplication_V_add_20_reg_1038");
    sc_trace(mVcdFile, multiplication_V_add_17_reg_1044, "multiplication_V_add_17_reg_1044");
    sc_trace(mVcdFile, multiplication_V_add_19_reg_1049, "multiplication_V_add_19_reg_1049");
    sc_trace(mVcdFile, xor_ln719_fu_758_p2, "xor_ln719_fu_758_p2");
    sc_trace(mVcdFile, xor_ln719_reg_1054, "xor_ln719_reg_1054");
    sc_trace(mVcdFile, multiplication_V_add_21_reg_1059, "multiplication_V_add_21_reg_1059");
    sc_trace(mVcdFile, column_index_0_reg_243, "column_index_0_reg_243");
    sc_trace(mVcdFile, row_index_0_reg_255, "row_index_0_reg_255");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, zext_ln99_fu_286_p1, "zext_ln99_fu_286_p1");
    sc_trace(mVcdFile, zext_ln180_28_fu_297_p1, "zext_ln180_28_fu_297_p1");
    sc_trace(mVcdFile, tmp_fu_302_p3, "tmp_fu_302_p3");
    sc_trace(mVcdFile, zext_ln180_29_fu_314_p1, "zext_ln180_29_fu_314_p1");
    sc_trace(mVcdFile, zext_ln180_31_fu_764_p1, "zext_ln180_31_fu_764_p1");
    sc_trace(mVcdFile, add_ln544_5_fu_400_p2, "add_ln544_5_fu_400_p2");
    sc_trace(mVcdFile, add_ln544_6_fu_431_p2, "add_ln544_6_fu_431_p2");
    sc_trace(mVcdFile, add_ln544_fu_462_p2, "add_ln544_fu_462_p2");
    sc_trace(mVcdFile, add_ln544_7_fu_493_p2, "add_ln544_7_fu_493_p2");
    sc_trace(mVcdFile, add_ln78_3_fu_536_p2, "add_ln78_3_fu_536_p2");
    sc_trace(mVcdFile, add_ln719_6_fu_591_p2, "add_ln719_6_fu_591_p2");
    sc_trace(mVcdFile, add_ln719_8_fu_634_p2, "add_ln719_8_fu_634_p2");
    sc_trace(mVcdFile, add_ln719_10_fu_689_p2, "add_ln719_10_fu_689_p2");
    sc_trace(mVcdFile, ap_block_state15_io, "ap_block_state15_io");
    sc_trace(mVcdFile, sext_ln180_fu_311_p1, "sext_ln180_fu_311_p1");
    sc_trace(mVcdFile, sext_ln544_8_fu_329_p0, "sext_ln544_8_fu_329_p0");
    sc_trace(mVcdFile, sext_ln103_fu_333_p0, "sext_ln103_fu_333_p0");
    sc_trace(mVcdFile, tmp_s_fu_349_p3, "tmp_s_fu_349_p3");
    sc_trace(mVcdFile, zext_ln180_30_fu_357_p1, "zext_ln180_30_fu_357_p1");
    sc_trace(mVcdFile, xor_ln544_fu_366_p2, "xor_ln544_fu_366_p2");
    sc_trace(mVcdFile, tmp_33_fu_372_p3, "tmp_33_fu_372_p3");
    sc_trace(mVcdFile, tmp_34_fu_384_p3, "tmp_34_fu_384_p3");
    sc_trace(mVcdFile, sext_ln544_10_fu_392_p1, "sext_ln544_10_fu_392_p1");
    sc_trace(mVcdFile, zext_ln544_5_fu_396_p1, "zext_ln544_5_fu_396_p1");
    sc_trace(mVcdFile, sext_ln544_9_fu_380_p1, "sext_ln544_9_fu_380_p1");
    sc_trace(mVcdFile, or_ln544_fu_411_p2, "or_ln544_fu_411_p2");
    sc_trace(mVcdFile, tmp_31_fu_417_p4, "tmp_31_fu_417_p4");
    sc_trace(mVcdFile, zext_ln544_6_fu_427_p1, "zext_ln544_6_fu_427_p1");
    sc_trace(mVcdFile, or_ln544_3_fu_442_p2, "or_ln544_3_fu_442_p2");
    sc_trace(mVcdFile, tmp_32_fu_448_p4, "tmp_32_fu_448_p4");
    sc_trace(mVcdFile, zext_ln544_7_fu_458_p1, "zext_ln544_7_fu_458_p1");
    sc_trace(mVcdFile, or_ln544_4_fu_473_p2, "or_ln544_4_fu_473_p2");
    sc_trace(mVcdFile, tmp_35_fu_479_p4, "tmp_35_fu_479_p4");
    sc_trace(mVcdFile, zext_ln544_8_fu_489_p1, "zext_ln544_8_fu_489_p1");
    sc_trace(mVcdFile, zext_ln78_5_fu_509_p1, "zext_ln78_5_fu_509_p1");
    sc_trace(mVcdFile, add_ln78_fu_513_p2, "add_ln78_fu_513_p2");
    sc_trace(mVcdFile, tmp_36_fu_518_p4, "tmp_36_fu_518_p4");
    sc_trace(mVcdFile, sext_ln78_fu_528_p1, "sext_ln78_fu_528_p1");
    sc_trace(mVcdFile, zext_ln78_4_fu_532_p1, "zext_ln78_4_fu_532_p1");
    sc_trace(mVcdFile, zext_ln719_13_fu_564_p1, "zext_ln719_13_fu_564_p1");
    sc_trace(mVcdFile, add_ln719_fu_568_p2, "add_ln719_fu_568_p2");
    sc_trace(mVcdFile, tmp_40_fu_573_p4, "tmp_40_fu_573_p4");
    sc_trace(mVcdFile, sext_ln719_fu_583_p1, "sext_ln719_fu_583_p1");
    sc_trace(mVcdFile, zext_ln719_8_fu_587_p1, "zext_ln719_8_fu_587_p1");
    sc_trace(mVcdFile, zext_ln719_14_fu_607_p1, "zext_ln719_14_fu_607_p1");
    sc_trace(mVcdFile, add_ln719_7_fu_611_p2, "add_ln719_7_fu_611_p2");
    sc_trace(mVcdFile, tmp_42_fu_616_p4, "tmp_42_fu_616_p4");
    sc_trace(mVcdFile, sext_ln719_5_fu_626_p1, "sext_ln719_5_fu_626_p1");
    sc_trace(mVcdFile, zext_ln719_10_fu_630_p1, "zext_ln719_10_fu_630_p1");
    sc_trace(mVcdFile, zext_ln719_15_fu_662_p1, "zext_ln719_15_fu_662_p1");
    sc_trace(mVcdFile, add_ln719_9_fu_666_p2, "add_ln719_9_fu_666_p2");
    sc_trace(mVcdFile, tmp_46_fu_671_p4, "tmp_46_fu_671_p4");
    sc_trace(mVcdFile, sext_ln719_6_fu_681_p1, "sext_ln719_6_fu_681_p1");
    sc_trace(mVcdFile, zext_ln719_12_fu_685_p1, "zext_ln719_12_fu_685_p1");
    sc_trace(mVcdFile, add_ln78_6_fu_700_p2, "add_ln78_6_fu_700_p2");
    sc_trace(mVcdFile, empty_48_fu_704_p1, "empty_48_fu_704_p1");
    sc_trace(mVcdFile, tmp_37_fu_708_p3, "tmp_37_fu_708_p3");
    sc_trace(mVcdFile, tmp_55_fu_716_p1, "tmp_55_fu_716_p1");
    sc_trace(mVcdFile, lshr_ln78_fu_720_p2, "lshr_ln78_fu_720_p2");
    sc_trace(mVcdFile, add_ln719_17_fu_729_p2, "add_ln719_17_fu_729_p2");
    sc_trace(mVcdFile, empty_49_fu_733_p1, "empty_49_fu_733_p1");
    sc_trace(mVcdFile, tmp_41_fu_737_p3, "tmp_41_fu_737_p3");
    sc_trace(mVcdFile, tmp_60_fu_745_p1, "tmp_60_fu_745_p1");
    sc_trace(mVcdFile, lshr_ln719_fu_749_p2, "lshr_ln719_fu_749_p2");
    sc_trace(mVcdFile, trunc_ln719_fu_754_p1, "trunc_ln719_fu_754_p1");
    sc_trace(mVcdFile, trunc_ln78_fu_725_p1, "trunc_ln78_fu_725_p1");
    sc_trace(mVcdFile, add_ln719_18_fu_768_p2, "add_ln719_18_fu_768_p2");
    sc_trace(mVcdFile, empty_50_fu_772_p1, "empty_50_fu_772_p1");
    sc_trace(mVcdFile, tmp_43_fu_776_p3, "tmp_43_fu_776_p3");
    sc_trace(mVcdFile, tmp_65_fu_784_p1, "tmp_65_fu_784_p1");
    sc_trace(mVcdFile, lshr_ln719_3_fu_788_p2, "lshr_ln719_3_fu_788_p2");
    sc_trace(mVcdFile, add_ln719_19_fu_797_p2, "add_ln719_19_fu_797_p2");
    sc_trace(mVcdFile, empty_51_fu_801_p1, "empty_51_fu_801_p1");
    sc_trace(mVcdFile, tmp_47_fu_805_p3, "tmp_47_fu_805_p3");
    sc_trace(mVcdFile, tmp_70_fu_813_p1, "tmp_70_fu_813_p1");
    sc_trace(mVcdFile, lshr_ln719_4_fu_817_p2, "lshr_ln719_4_fu_817_p2");
    sc_trace(mVcdFile, trunc_ln719_5_fu_793_p1, "trunc_ln719_5_fu_793_p1");
    sc_trace(mVcdFile, trunc_ln719_6_fu_822_p1, "trunc_ln719_6_fu_822_p1");
    sc_trace(mVcdFile, xor_ln719_1_fu_826_p2, "xor_ln719_1_fu_826_p2");
    sc_trace(mVcdFile, xor_ln719_2_fu_832_p2, "xor_ln719_2_fu_832_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

aes_mix_columns84142::~aes_mix_columns84142() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void aes_mix_columns84142::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln103_fu_337_p2.read(), ap_const_lv1_1))) {
        column_index_0_reg_243 = column_index_reg_861.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        column_index_0_reg_243 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        row_index_0_reg_255 = row_index_reg_941.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        row_index_0_reg_255 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln103_fu_337_p2.read()))) {
        add_ln180_reg_946 = add_ln180_fu_361_p2.read();
        constant_matrix_V_ad_15_reg_957 =  (sc_lv<32>) (add_ln544_6_fu_431_p2.read());
        constant_matrix_V_ad_16_reg_963 =  (sc_lv<32>) (add_ln544_fu_462_p2.read());
        constant_matrix_V_ad_17_reg_969 =  (sc_lv<32>) (add_ln544_7_fu_493_p2.read());
        constant_matrix_V_ad_reg_951 =  (sc_lv<32>) (add_ln544_5_fu_400_p2.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        column_index_reg_861 = column_index_fu_280_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(m_axi_constant_matrix_V_RVALID.read(), ap_const_logic_1))) {
        constant_matrix_V_ad_18_reg_975 = m_axi_constant_matrix_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(m_axi_constant_matrix_V_RVALID.read(), ap_const_logic_1))) {
        constant_matrix_V_ad_20_reg_1012 = m_axi_constant_matrix_V_RDATA.read();
        multiplication_V_add_16_reg_1006 =  (sc_lv<32>) (add_ln719_6_fu_591_p2.read());
        tmp_39_reg_1001 = tmp_39_fu_557_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, m_axi_constant_matrix_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_multiplication_V_RVALID.read())))) {
        multiplication_V_add_15_reg_991 = m_axi_multiplication_V_RDATA.read();
        tmp_38_reg_996 = m_axi_constant_matrix_V_RDATA.read().range(15, 8);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(m_axi_multiplication_V_RVALID.read(), ap_const_logic_1))) {
        multiplication_V_add_17_reg_1044 = m_axi_multiplication_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, m_axi_constant_matrix_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_multiplication_V_ARREADY.read())))) {
        multiplication_V_add_18_reg_1022 =  (sc_lv<32>) (add_ln719_8_fu_634_p2.read());
        shl_ln719_reg_1017 = shl_ln719_fu_602_p2.read();
        tmp_44_reg_1028 = m_axi_constant_matrix_V_RDATA.read().range(15, 8);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(m_axi_multiplication_V_RVALID.read(), ap_const_logic_1))) {
        multiplication_V_add_19_reg_1049 = m_axi_multiplication_V_RDATA.read();
        xor_ln719_reg_1054 = xor_ln719_fu_758_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && esl_seteq<1,1,1>(m_axi_multiplication_V_ARREADY.read(), ap_const_logic_1))) {
        multiplication_V_add_20_reg_1038 =  (sc_lv<32>) (add_ln719_10_fu_689_p2.read());
        tmp_45_reg_1033 = tmp_45_fu_655_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && esl_seteq<1,1,1>(m_axi_multiplication_V_RVALID.read(), ap_const_logic_1))) {
        multiplication_V_add_21_reg_1059 = m_axi_multiplication_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(m_axi_constant_matrix_V_ARREADY.read(), ap_const_logic_1))) {
        multiplication_V_add_reg_985 =  (sc_lv<32>) (add_ln78_3_fu_536_p2.read());
        shl_ln78_reg_980 = shl_ln78_fu_504_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        row_index_reg_941 = row_index_fu_343_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sext_ln103_reg_933 = sext_ln103_fu_333_p1.read();
        sext_ln544_7_reg_923 = sext_ln544_7_fu_326_p1.read();
        sext_ln544_8_reg_928 = sext_ln544_8_fu_329_p1.read();
        sext_ln544_reg_918 = sext_ln544_fu_323_p1.read();
        state_matrix_V_load_2_reg_908 = state_matrix_V_q0.read();
        state_matrix_V_load_3_reg_913 = state_matrix_V_q1.read();
        zext_ln180_reg_903 = zext_ln180_fu_319_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        state_matrix_V_load_1_reg_897 = state_matrix_V_q1.read();
        state_matrix_V_load_reg_891 = state_matrix_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln96_fu_274_p2.read()))) {
        xor_ln180_reg_871 = xor_ln180_fu_291_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        zext_ln544_reg_842 = zext_ln544_fu_266_p1.read();
        zext_ln78_reg_850 = zext_ln78_fu_270_p1.read();
    }
}

void aes_mix_columns84142::thread_add_ln180_fu_361_p2() {
    add_ln180_fu_361_p2 = (!zext_ln180_30_fu_357_p1.read().is_01() || !zext_ln180_reg_903.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln180_30_fu_357_p1.read()) + sc_biguint<6>(zext_ln180_reg_903.read()));
}

void aes_mix_columns84142::thread_add_ln544_5_fu_400_p2() {
    add_ln544_5_fu_400_p2 = (!zext_ln544_reg_842.read().is_01() || !zext_ln544_5_fu_396_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln544_reg_842.read()) + sc_biguint<64>(zext_ln544_5_fu_396_p1.read()));
}

void aes_mix_columns84142::thread_add_ln544_6_fu_431_p2() {
    add_ln544_6_fu_431_p2 = (!zext_ln544_reg_842.read().is_01() || !zext_ln544_6_fu_427_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln544_reg_842.read()) + sc_biguint<64>(zext_ln544_6_fu_427_p1.read()));
}

void aes_mix_columns84142::thread_add_ln544_7_fu_493_p2() {
    add_ln544_7_fu_493_p2 = (!zext_ln544_reg_842.read().is_01() || !zext_ln544_8_fu_489_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln544_reg_842.read()) + sc_biguint<64>(zext_ln544_8_fu_489_p1.read()));
}

void aes_mix_columns84142::thread_add_ln544_fu_462_p2() {
    add_ln544_fu_462_p2 = (!zext_ln544_reg_842.read().is_01() || !zext_ln544_7_fu_458_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln544_reg_842.read()) + sc_biguint<64>(zext_ln544_7_fu_458_p1.read()));
}

void aes_mix_columns84142::thread_add_ln719_10_fu_689_p2() {
    add_ln719_10_fu_689_p2 = (!zext_ln78_reg_850.read().is_01() || !zext_ln719_12_fu_685_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln78_reg_850.read()) + sc_biguint<64>(zext_ln719_12_fu_685_p1.read()));
}

void aes_mix_columns84142::thread_add_ln719_17_fu_729_p2() {
    add_ln719_17_fu_729_p2 = (!state_matrix_V_load_1_reg_897.read().is_01() || !tmp_39_reg_1001.read().is_01())? sc_lv<16>(): (sc_bigint<16>(state_matrix_V_load_1_reg_897.read()) + sc_biguint<16>(tmp_39_reg_1001.read()));
}

void aes_mix_columns84142::thread_add_ln719_18_fu_768_p2() {
    add_ln719_18_fu_768_p2 = (!state_matrix_V_load_2_reg_908.read().is_01() || !shl_ln719_reg_1017.read().is_01())? sc_lv<16>(): (sc_bigint<16>(state_matrix_V_load_2_reg_908.read()) + sc_biguint<16>(shl_ln719_reg_1017.read()));
}

void aes_mix_columns84142::thread_add_ln719_19_fu_797_p2() {
    add_ln719_19_fu_797_p2 = (!state_matrix_V_load_3_reg_913.read().is_01() || !tmp_45_reg_1033.read().is_01())? sc_lv<16>(): (sc_bigint<16>(state_matrix_V_load_3_reg_913.read()) + sc_biguint<16>(tmp_45_reg_1033.read()));
}

void aes_mix_columns84142::thread_add_ln719_6_fu_591_p2() {
    add_ln719_6_fu_591_p2 = (!zext_ln78_reg_850.read().is_01() || !zext_ln719_8_fu_587_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln78_reg_850.read()) + sc_biguint<64>(zext_ln719_8_fu_587_p1.read()));
}

void aes_mix_columns84142::thread_add_ln719_7_fu_611_p2() {
    add_ln719_7_fu_611_p2 = (!zext_ln719_14_fu_607_p1.read().is_01() || !sext_ln544_8_reg_928.read().is_01())? sc_lv<18>(): (sc_biguint<18>(zext_ln719_14_fu_607_p1.read()) + sc_bigint<18>(sext_ln544_8_reg_928.read()));
}

void aes_mix_columns84142::thread_add_ln719_8_fu_634_p2() {
    add_ln719_8_fu_634_p2 = (!zext_ln78_reg_850.read().is_01() || !zext_ln719_10_fu_630_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln78_reg_850.read()) + sc_biguint<64>(zext_ln719_10_fu_630_p1.read()));
}

void aes_mix_columns84142::thread_add_ln719_9_fu_666_p2() {
    add_ln719_9_fu_666_p2 = (!zext_ln719_15_fu_662_p1.read().is_01() || !sext_ln103_reg_933.read().is_01())? sc_lv<18>(): (sc_biguint<18>(zext_ln719_15_fu_662_p1.read()) + sc_bigint<18>(sext_ln103_reg_933.read()));
}

void aes_mix_columns84142::thread_add_ln719_fu_568_p2() {
    add_ln719_fu_568_p2 = (!zext_ln719_13_fu_564_p1.read().is_01() || !sext_ln544_7_reg_923.read().is_01())? sc_lv<18>(): (sc_biguint<18>(zext_ln719_13_fu_564_p1.read()) + sc_bigint<18>(sext_ln544_7_reg_923.read()));
}

void aes_mix_columns84142::thread_add_ln78_3_fu_536_p2() {
    add_ln78_3_fu_536_p2 = (!zext_ln78_reg_850.read().is_01() || !zext_ln78_4_fu_532_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln78_reg_850.read()) + sc_biguint<64>(zext_ln78_4_fu_532_p1.read()));
}

void aes_mix_columns84142::thread_add_ln78_6_fu_700_p2() {
    add_ln78_6_fu_700_p2 = (!state_matrix_V_load_reg_891.read().is_01() || !shl_ln78_reg_980.read().is_01())? sc_lv<16>(): (sc_bigint<16>(state_matrix_V_load_reg_891.read()) + sc_biguint<16>(shl_ln78_reg_980.read()));
}

void aes_mix_columns84142::thread_add_ln78_fu_513_p2() {
    add_ln78_fu_513_p2 = (!zext_ln78_5_fu_509_p1.read().is_01() || !sext_ln544_reg_918.read().is_01())? sc_lv<18>(): (sc_biguint<18>(zext_ln78_5_fu_509_p1.read()) + sc_bigint<18>(sext_ln544_reg_918.read()));
}

void aes_mix_columns84142::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void aes_mix_columns84142::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void aes_mix_columns84142::thread_ap_block_state15_io() {
    ap_block_state15_io = (esl_seteq<1,1,1>(ap_const_logic_0, m_axi_constant_matrix_V_ARREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_multiplication_V_ARREADY.read()));
}

void aes_mix_columns84142::thread_ap_block_state22() {
    ap_block_state22 = (esl_seteq<1,1,1>(ap_const_logic_0, m_axi_constant_matrix_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_multiplication_V_RVALID.read()));
}

void aes_mix_columns84142::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln96_fu_274_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void aes_mix_columns84142::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void aes_mix_columns84142::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln96_fu_274_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void aes_mix_columns84142::thread_column_index_fu_280_p2() {
    column_index_fu_280_p2 = (!column_index_0_reg_243.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(column_index_0_reg_243.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void aes_mix_columns84142::thread_constant_matrix_V_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        constant_matrix_V_blk_n_AR = m_axi_constant_matrix_V_ARREADY.read();
    } else {
        constant_matrix_V_blk_n_AR = ap_const_logic_1;
    }
}

void aes_mix_columns84142::thread_constant_matrix_V_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        constant_matrix_V_blk_n_R = m_axi_constant_matrix_V_RVALID.read();
    } else {
        constant_matrix_V_blk_n_R = ap_const_logic_1;
    }
}

void aes_mix_columns84142::thread_empty_48_fu_704_p1() {
    empty_48_fu_704_p1 = add_ln78_6_fu_700_p2.read().range(1-1, 0);
}

void aes_mix_columns84142::thread_empty_49_fu_733_p1() {
    empty_49_fu_733_p1 = add_ln719_17_fu_729_p2.read().range(1-1, 0);
}

void aes_mix_columns84142::thread_empty_50_fu_772_p1() {
    empty_50_fu_772_p1 = add_ln719_18_fu_768_p2.read().range(1-1, 0);
}

void aes_mix_columns84142::thread_empty_51_fu_801_p1() {
    empty_51_fu_801_p1 = add_ln719_19_fu_797_p2.read().range(1-1, 0);
}

void aes_mix_columns84142::thread_icmp_ln103_fu_337_p2() {
    icmp_ln103_fu_337_p2 = (!row_index_0_reg_255.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(row_index_0_reg_255.read() == ap_const_lv3_4);
}

void aes_mix_columns84142::thread_icmp_ln96_fu_274_p2() {
    icmp_ln96_fu_274_p2 = (!column_index_0_reg_243.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(column_index_0_reg_243.read() == ap_const_lv3_4);
}

void aes_mix_columns84142::thread_lshr_ln719_3_fu_788_p2() {
    lshr_ln719_3_fu_788_p2 = (!tmp_65_fu_784_p1.read().is_01())? sc_lv<16>(): multiplication_V_add_19_reg_1049.read() >> (unsigned short)tmp_65_fu_784_p1.read().to_uint();
}

void aes_mix_columns84142::thread_lshr_ln719_4_fu_817_p2() {
    lshr_ln719_4_fu_817_p2 = (!tmp_70_fu_813_p1.read().is_01())? sc_lv<16>(): multiplication_V_add_21_reg_1059.read() >> (unsigned short)tmp_70_fu_813_p1.read().to_uint();
}

void aes_mix_columns84142::thread_lshr_ln719_fu_749_p2() {
    lshr_ln719_fu_749_p2 = (!tmp_60_fu_745_p1.read().is_01())? sc_lv<16>(): multiplication_V_add_17_reg_1044.read() >> (unsigned short)tmp_60_fu_745_p1.read().to_uint();
}

void aes_mix_columns84142::thread_lshr_ln78_fu_720_p2() {
    lshr_ln78_fu_720_p2 = (!tmp_55_fu_716_p1.read().is_01())? sc_lv<16>(): multiplication_V_add_15_reg_991.read() >> (unsigned short)tmp_55_fu_716_p1.read().to_uint();
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_ARADDR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(m_axi_constant_matrix_V_ARREADY.read(), ap_const_logic_1))) {
        m_axi_constant_matrix_V_ARADDR = constant_matrix_V_ad_17_reg_969.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,1,1>(ap_block_state15_io.read(), ap_const_boolean_0))) {
        m_axi_constant_matrix_V_ARADDR = constant_matrix_V_ad_16_reg_963.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(m_axi_constant_matrix_V_ARREADY.read(), ap_const_logic_1))) {
        m_axi_constant_matrix_V_ARADDR = constant_matrix_V_ad_15_reg_957.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(m_axi_constant_matrix_V_ARREADY.read(), ap_const_logic_1))) {
        m_axi_constant_matrix_V_ARADDR = constant_matrix_V_ad_reg_951.read();
    } else {
        m_axi_constant_matrix_V_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_ARBURST() {
    m_axi_constant_matrix_V_ARBURST = ap_const_lv2_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_ARCACHE() {
    m_axi_constant_matrix_V_ARCACHE = ap_const_lv4_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_ARID() {
    m_axi_constant_matrix_V_ARID = ap_const_lv1_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_ARLEN() {
    m_axi_constant_matrix_V_ARLEN = ap_const_lv32_1;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_ARLOCK() {
    m_axi_constant_matrix_V_ARLOCK = ap_const_lv2_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_ARPROT() {
    m_axi_constant_matrix_V_ARPROT = ap_const_lv3_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_ARQOS() {
    m_axi_constant_matrix_V_ARQOS = ap_const_lv4_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_ARREGION() {
    m_axi_constant_matrix_V_ARREGION = ap_const_lv4_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_ARSIZE() {
    m_axi_constant_matrix_V_ARSIZE = ap_const_lv3_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_ARUSER() {
    m_axi_constant_matrix_V_ARUSER = ap_const_lv1_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(m_axi_constant_matrix_V_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(m_axi_constant_matrix_V_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_block_state15_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(m_axi_constant_matrix_V_ARREADY.read(), ap_const_logic_1)))) {
        m_axi_constant_matrix_V_ARVALID = ap_const_logic_1;
    } else {
        m_axi_constant_matrix_V_ARVALID = ap_const_logic_0;
    }
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_AWADDR() {
    m_axi_constant_matrix_V_AWADDR = ap_const_lv32_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_AWBURST() {
    m_axi_constant_matrix_V_AWBURST = ap_const_lv2_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_AWCACHE() {
    m_axi_constant_matrix_V_AWCACHE = ap_const_lv4_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_AWID() {
    m_axi_constant_matrix_V_AWID = ap_const_lv1_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_AWLEN() {
    m_axi_constant_matrix_V_AWLEN = ap_const_lv32_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_AWLOCK() {
    m_axi_constant_matrix_V_AWLOCK = ap_const_lv2_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_AWPROT() {
    m_axi_constant_matrix_V_AWPROT = ap_const_lv3_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_AWQOS() {
    m_axi_constant_matrix_V_AWQOS = ap_const_lv4_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_AWREGION() {
    m_axi_constant_matrix_V_AWREGION = ap_const_lv4_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_AWSIZE() {
    m_axi_constant_matrix_V_AWSIZE = ap_const_lv3_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_AWUSER() {
    m_axi_constant_matrix_V_AWUSER = ap_const_lv1_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_AWVALID() {
    m_axi_constant_matrix_V_AWVALID = ap_const_logic_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_BREADY() {
    m_axi_constant_matrix_V_BREADY = ap_const_logic_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(m_axi_constant_matrix_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, m_axi_constant_matrix_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_multiplication_V_RVALID.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          esl_seteq<1,1,1>(m_axi_constant_matrix_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, m_axi_constant_matrix_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_multiplication_V_ARREADY.read()))))) {
        m_axi_constant_matrix_V_RREADY = ap_const_logic_1;
    } else {
        m_axi_constant_matrix_V_RREADY = ap_const_logic_0;
    }
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_WDATA() {
    m_axi_constant_matrix_V_WDATA = ap_const_lv16_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_WID() {
    m_axi_constant_matrix_V_WID = ap_const_lv1_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_WLAST() {
    m_axi_constant_matrix_V_WLAST = ap_const_logic_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_WSTRB() {
    m_axi_constant_matrix_V_WSTRB = ap_const_lv2_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_WUSER() {
    m_axi_constant_matrix_V_WUSER = ap_const_lv1_0;
}

void aes_mix_columns84142::thread_m_axi_constant_matrix_V_WVALID() {
    m_axi_constant_matrix_V_WVALID = ap_const_logic_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_ARADDR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,1,1>(m_axi_multiplication_V_ARREADY.read(), ap_const_logic_1))) {
        m_axi_multiplication_V_ARADDR = multiplication_V_add_20_reg_1038.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
                esl_seteq<1,1,1>(m_axi_multiplication_V_ARREADY.read(), ap_const_logic_1))) {
        m_axi_multiplication_V_ARADDR = multiplication_V_add_18_reg_1022.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, m_axi_constant_matrix_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_multiplication_V_ARREADY.read())))) {
        m_axi_multiplication_V_ARADDR = multiplication_V_add_16_reg_1006.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,1,1>(ap_block_state15_io.read(), ap_const_boolean_0))) {
        m_axi_multiplication_V_ARADDR = multiplication_V_add_reg_985.read();
    } else {
        m_axi_multiplication_V_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_ARBURST() {
    m_axi_multiplication_V_ARBURST = ap_const_lv2_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_ARCACHE() {
    m_axi_multiplication_V_ARCACHE = ap_const_lv4_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_ARID() {
    m_axi_multiplication_V_ARID = ap_const_lv1_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_ARLEN() {
    m_axi_multiplication_V_ARLEN = ap_const_lv32_1;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_ARLOCK() {
    m_axi_multiplication_V_ARLOCK = ap_const_lv2_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_ARPROT() {
    m_axi_multiplication_V_ARPROT = ap_const_lv3_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_ARQOS() {
    m_axi_multiplication_V_ARQOS = ap_const_lv4_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_ARREGION() {
    m_axi_multiplication_V_ARREGION = ap_const_lv4_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_ARSIZE() {
    m_axi_multiplication_V_ARSIZE = ap_const_lv3_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_ARUSER() {
    m_axi_multiplication_V_ARUSER = ap_const_lv1_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, m_axi_constant_matrix_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_multiplication_V_ARREADY.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(m_axi_multiplication_V_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_block_state15_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(m_axi_multiplication_V_ARREADY.read(), ap_const_logic_1)))) {
        m_axi_multiplication_V_ARVALID = ap_const_logic_1;
    } else {
        m_axi_multiplication_V_ARVALID = ap_const_logic_0;
    }
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_AWADDR() {
    m_axi_multiplication_V_AWADDR = ap_const_lv32_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_AWBURST() {
    m_axi_multiplication_V_AWBURST = ap_const_lv2_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_AWCACHE() {
    m_axi_multiplication_V_AWCACHE = ap_const_lv4_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_AWID() {
    m_axi_multiplication_V_AWID = ap_const_lv1_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_AWLEN() {
    m_axi_multiplication_V_AWLEN = ap_const_lv32_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_AWLOCK() {
    m_axi_multiplication_V_AWLOCK = ap_const_lv2_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_AWPROT() {
    m_axi_multiplication_V_AWPROT = ap_const_lv3_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_AWQOS() {
    m_axi_multiplication_V_AWQOS = ap_const_lv4_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_AWREGION() {
    m_axi_multiplication_V_AWREGION = ap_const_lv4_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_AWSIZE() {
    m_axi_multiplication_V_AWSIZE = ap_const_lv3_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_AWUSER() {
    m_axi_multiplication_V_AWUSER = ap_const_lv1_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_AWVALID() {
    m_axi_multiplication_V_AWVALID = ap_const_logic_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_BREADY() {
    m_axi_multiplication_V_BREADY = ap_const_logic_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, m_axi_constant_matrix_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_multiplication_V_RVALID.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(m_axi_multiplication_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          esl_seteq<1,1,1>(m_axi_multiplication_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
          esl_seteq<1,1,1>(m_axi_multiplication_V_RVALID.read(), ap_const_logic_1)))) {
        m_axi_multiplication_V_RREADY = ap_const_logic_1;
    } else {
        m_axi_multiplication_V_RREADY = ap_const_logic_0;
    }
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_WDATA() {
    m_axi_multiplication_V_WDATA = ap_const_lv16_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_WID() {
    m_axi_multiplication_V_WID = ap_const_lv1_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_WLAST() {
    m_axi_multiplication_V_WLAST = ap_const_logic_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_WSTRB() {
    m_axi_multiplication_V_WSTRB = ap_const_lv2_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_WUSER() {
    m_axi_multiplication_V_WUSER = ap_const_lv1_0;
}

void aes_mix_columns84142::thread_m_axi_multiplication_V_WVALID() {
    m_axi_multiplication_V_WVALID = ap_const_logic_0;
}

void aes_mix_columns84142::thread_multiplication_V_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        multiplication_V_blk_n_AR = m_axi_multiplication_V_ARREADY.read();
    } else {
        multiplication_V_blk_n_AR = ap_const_logic_1;
    }
}

void aes_mix_columns84142::thread_multiplication_V_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        multiplication_V_blk_n_R = m_axi_multiplication_V_RVALID.read();
    } else {
        multiplication_V_blk_n_R = ap_const_logic_1;
    }
}

void aes_mix_columns84142::thread_or_ln544_3_fu_442_p2() {
    or_ln544_3_fu_442_p2 = (sext_ln544_9_fu_380_p1.read() | ap_const_lv64_2);
}

void aes_mix_columns84142::thread_or_ln544_4_fu_473_p2() {
    or_ln544_4_fu_473_p2 = (sext_ln544_9_fu_380_p1.read() | ap_const_lv64_3);
}

void aes_mix_columns84142::thread_or_ln544_fu_411_p2() {
    or_ln544_fu_411_p2 = (sext_ln544_9_fu_380_p1.read() | ap_const_lv64_1);
}

void aes_mix_columns84142::thread_row_index_fu_343_p2() {
    row_index_fu_343_p2 = (!row_index_0_reg_255.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(row_index_0_reg_255.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void aes_mix_columns84142::thread_sext_ln103_fu_333_p0() {
    sext_ln103_fu_333_p0 = state_matrix_V_q1.read();
}

void aes_mix_columns84142::thread_sext_ln103_fu_333_p1() {
    sext_ln103_fu_333_p1 = esl_sext<18,16>(sext_ln103_fu_333_p0.read());
}

void aes_mix_columns84142::thread_sext_ln180_fu_311_p1() {
    sext_ln180_fu_311_p1 = esl_sext<4,3>(xor_ln180_reg_871.read());
}

void aes_mix_columns84142::thread_sext_ln544_10_fu_392_p1() {
    sext_ln544_10_fu_392_p1 = esl_sext<63,4>(tmp_34_fu_384_p3.read());
}

void aes_mix_columns84142::thread_sext_ln544_7_fu_326_p1() {
    sext_ln544_7_fu_326_p1 = esl_sext<18,16>(state_matrix_V_load_1_reg_897.read());
}

void aes_mix_columns84142::thread_sext_ln544_8_fu_329_p0() {
    sext_ln544_8_fu_329_p0 = state_matrix_V_q0.read();
}

void aes_mix_columns84142::thread_sext_ln544_8_fu_329_p1() {
    sext_ln544_8_fu_329_p1 = esl_sext<18,16>(sext_ln544_8_fu_329_p0.read());
}

void aes_mix_columns84142::thread_sext_ln544_9_fu_380_p1() {
    sext_ln544_9_fu_380_p1 = esl_sext<64,5>(tmp_33_fu_372_p3.read());
}

void aes_mix_columns84142::thread_sext_ln544_fu_323_p1() {
    sext_ln544_fu_323_p1 = esl_sext<18,16>(state_matrix_V_load_reg_891.read());
}

void aes_mix_columns84142::thread_sext_ln719_5_fu_626_p1() {
    sext_ln719_5_fu_626_p1 = esl_sext<63,17>(tmp_42_fu_616_p4.read());
}

void aes_mix_columns84142::thread_sext_ln719_6_fu_681_p1() {
    sext_ln719_6_fu_681_p1 = esl_sext<63,17>(tmp_46_fu_671_p4.read());
}

void aes_mix_columns84142::thread_sext_ln719_fu_583_p1() {
    sext_ln719_fu_583_p1 = esl_sext<63,17>(tmp_40_fu_573_p4.read());
}

void aes_mix_columns84142::thread_sext_ln78_fu_528_p1() {
    sext_ln78_fu_528_p1 = esl_sext<63,17>(tmp_36_fu_518_p4.read());
}

void aes_mix_columns84142::thread_shl_ln719_fu_602_p2() {
    shl_ln719_fu_602_p2 = (!ap_const_lv16_8.is_01())? sc_lv<16>(): constant_matrix_V_ad_20_reg_1012.read() << (unsigned short)ap_const_lv16_8.to_uint();
}

void aes_mix_columns84142::thread_shl_ln78_fu_504_p2() {
    shl_ln78_fu_504_p2 = (!ap_const_lv16_8.is_01())? sc_lv<16>(): constant_matrix_V_ad_18_reg_975.read() << (unsigned short)ap_const_lv16_8.to_uint();
}

void aes_mix_columns84142::thread_state_matrix_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        state_matrix_V_address0 =  (sc_lv<4>) (zext_ln180_31_fu_764_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        state_matrix_V_address0 =  (sc_lv<4>) (tmp_fu_302_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        state_matrix_V_address0 =  (sc_lv<4>) (zext_ln99_fu_286_p1.read());
    } else {
        state_matrix_V_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void aes_mix_columns84142::thread_state_matrix_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        state_matrix_V_address1 =  (sc_lv<4>) (zext_ln180_29_fu_314_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        state_matrix_V_address1 =  (sc_lv<4>) (zext_ln180_28_fu_297_p1.read());
    } else {
        state_matrix_V_address1 =  (sc_lv<4>) ("XXXX");
    }
}

void aes_mix_columns84142::thread_state_matrix_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        state_matrix_V_ce0 = ap_const_logic_1;
    } else {
        state_matrix_V_ce0 = ap_const_logic_0;
    }
}

void aes_mix_columns84142::thread_state_matrix_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        state_matrix_V_ce1 = ap_const_logic_1;
    } else {
        state_matrix_V_ce1 = ap_const_logic_0;
    }
}

void aes_mix_columns84142::thread_state_matrix_V_d0() {
    state_matrix_V_d0 = esl_zext<16,8>(xor_ln719_2_fu_832_p2.read());
}

void aes_mix_columns84142::thread_state_matrix_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        state_matrix_V_we0 = ap_const_logic_1;
    } else {
        state_matrix_V_we0 = ap_const_logic_0;
    }
}

void aes_mix_columns84142::thread_tmp_31_fu_417_p4() {
    tmp_31_fu_417_p4 = or_ln544_fu_411_p2.read().range(63, 1);
}

void aes_mix_columns84142::thread_tmp_32_fu_448_p4() {
    tmp_32_fu_448_p4 = or_ln544_3_fu_442_p2.read().range(63, 1);
}

void aes_mix_columns84142::thread_tmp_33_fu_372_p3() {
    tmp_33_fu_372_p3 = esl_concat<3,2>(xor_ln544_fu_366_p2.read(), ap_const_lv2_0);
}

void aes_mix_columns84142::thread_tmp_34_fu_384_p3() {
    tmp_34_fu_384_p3 = esl_concat<3,1>(xor_ln544_fu_366_p2.read(), ap_const_lv1_0);
}

void aes_mix_columns84142::thread_tmp_35_fu_479_p4() {
    tmp_35_fu_479_p4 = or_ln544_4_fu_473_p2.read().range(63, 1);
}

void aes_mix_columns84142::thread_tmp_36_fu_518_p4() {
    tmp_36_fu_518_p4 = add_ln78_fu_513_p2.read().range(17, 1);
}

void aes_mix_columns84142::thread_tmp_37_fu_708_p3() {
    tmp_37_fu_708_p3 = esl_concat<1,3>(empty_48_fu_704_p1.read(), ap_const_lv3_0);
}

void aes_mix_columns84142::thread_tmp_39_fu_557_p3() {
    tmp_39_fu_557_p3 = esl_concat<8,8>(tmp_38_reg_996.read(), ap_const_lv8_0);
}

void aes_mix_columns84142::thread_tmp_40_fu_573_p4() {
    tmp_40_fu_573_p4 = add_ln719_fu_568_p2.read().range(17, 1);
}

void aes_mix_columns84142::thread_tmp_41_fu_737_p3() {
    tmp_41_fu_737_p3 = esl_concat<1,3>(empty_49_fu_733_p1.read(), ap_const_lv3_0);
}

void aes_mix_columns84142::thread_tmp_42_fu_616_p4() {
    tmp_42_fu_616_p4 = add_ln719_7_fu_611_p2.read().range(17, 1);
}

void aes_mix_columns84142::thread_tmp_43_fu_776_p3() {
    tmp_43_fu_776_p3 = esl_concat<1,3>(empty_50_fu_772_p1.read(), ap_const_lv3_0);
}

void aes_mix_columns84142::thread_tmp_45_fu_655_p3() {
    tmp_45_fu_655_p3 = esl_concat<8,8>(tmp_44_reg_1028.read(), ap_const_lv8_0);
}

void aes_mix_columns84142::thread_tmp_46_fu_671_p4() {
    tmp_46_fu_671_p4 = add_ln719_9_fu_666_p2.read().range(17, 1);
}

void aes_mix_columns84142::thread_tmp_47_fu_805_p3() {
    tmp_47_fu_805_p3 = esl_concat<1,3>(empty_51_fu_801_p1.read(), ap_const_lv3_0);
}

void aes_mix_columns84142::thread_tmp_55_fu_716_p1() {
    tmp_55_fu_716_p1 = esl_zext<16,4>(tmp_37_fu_708_p3.read());
}

void aes_mix_columns84142::thread_tmp_60_fu_745_p1() {
    tmp_60_fu_745_p1 = esl_zext<16,4>(tmp_41_fu_737_p3.read());
}

void aes_mix_columns84142::thread_tmp_65_fu_784_p1() {
    tmp_65_fu_784_p1 = esl_zext<16,4>(tmp_43_fu_776_p3.read());
}

void aes_mix_columns84142::thread_tmp_70_fu_813_p1() {
    tmp_70_fu_813_p1 = esl_zext<16,4>(tmp_47_fu_805_p3.read());
}

void aes_mix_columns84142::thread_tmp_fu_302_p3() {
    tmp_fu_302_p3 = esl_concat<61,3>(ap_const_lv61_1, column_index_0_reg_243.read());
}

void aes_mix_columns84142::thread_tmp_s_fu_349_p3() {
    tmp_s_fu_349_p3 = esl_concat<3,2>(row_index_0_reg_255.read(), ap_const_lv2_0);
}

void aes_mix_columns84142::thread_trunc_ln719_5_fu_793_p1() {
    trunc_ln719_5_fu_793_p1 = lshr_ln719_3_fu_788_p2.read().range(8-1, 0);
}

void aes_mix_columns84142::thread_trunc_ln719_6_fu_822_p1() {
    trunc_ln719_6_fu_822_p1 = lshr_ln719_4_fu_817_p2.read().range(8-1, 0);
}

void aes_mix_columns84142::thread_trunc_ln719_fu_754_p1() {
    trunc_ln719_fu_754_p1 = lshr_ln719_fu_749_p2.read().range(8-1, 0);
}

void aes_mix_columns84142::thread_trunc_ln78_fu_725_p1() {
    trunc_ln78_fu_725_p1 = lshr_ln78_fu_720_p2.read().range(8-1, 0);
}

void aes_mix_columns84142::thread_xor_ln180_fu_291_p2() {
    xor_ln180_fu_291_p2 = (column_index_0_reg_243.read() ^ ap_const_lv3_4);
}

void aes_mix_columns84142::thread_xor_ln544_fu_366_p2() {
    xor_ln544_fu_366_p2 = (row_index_0_reg_255.read() ^ ap_const_lv3_4);
}

void aes_mix_columns84142::thread_xor_ln719_1_fu_826_p2() {
    xor_ln719_1_fu_826_p2 = (trunc_ln719_5_fu_793_p1.read() ^ trunc_ln719_6_fu_822_p1.read());
}

void aes_mix_columns84142::thread_xor_ln719_2_fu_832_p2() {
    xor_ln719_2_fu_832_p2 = (xor_ln719_1_fu_826_p2.read() ^ xor_ln719_reg_1054.read());
}

void aes_mix_columns84142::thread_xor_ln719_fu_758_p2() {
    xor_ln719_fu_758_p2 = (trunc_ln719_fu_754_p1.read() ^ trunc_ln78_fu_725_p1.read());
}

void aes_mix_columns84142::thread_zext_ln180_28_fu_297_p1() {
    zext_ln180_28_fu_297_p1 = esl_zext<64,3>(xor_ln180_fu_291_p2.read());
}

void aes_mix_columns84142::thread_zext_ln180_29_fu_314_p1() {
    zext_ln180_29_fu_314_p1 = esl_zext<64,4>(sext_ln180_fu_311_p1.read());
}

void aes_mix_columns84142::thread_zext_ln180_30_fu_357_p1() {
    zext_ln180_30_fu_357_p1 = esl_zext<6,5>(tmp_s_fu_349_p3.read());
}

void aes_mix_columns84142::thread_zext_ln180_31_fu_764_p1() {
    zext_ln180_31_fu_764_p1 = esl_zext<64,6>(add_ln180_reg_946.read());
}

void aes_mix_columns84142::thread_zext_ln180_fu_319_p1() {
    zext_ln180_fu_319_p1 = esl_zext<6,3>(column_index_0_reg_243.read());
}

void aes_mix_columns84142::thread_zext_ln544_5_fu_396_p1() {
    zext_ln544_5_fu_396_p1 = esl_zext<64,63>(sext_ln544_10_fu_392_p1.read());
}

void aes_mix_columns84142::thread_zext_ln544_6_fu_427_p1() {
    zext_ln544_6_fu_427_p1 = esl_zext<64,63>(tmp_31_fu_417_p4.read());
}

void aes_mix_columns84142::thread_zext_ln544_7_fu_458_p1() {
    zext_ln544_7_fu_458_p1 = esl_zext<64,63>(tmp_32_fu_448_p4.read());
}

void aes_mix_columns84142::thread_zext_ln544_8_fu_489_p1() {
    zext_ln544_8_fu_489_p1 = esl_zext<64,63>(tmp_35_fu_479_p4.read());
}

void aes_mix_columns84142::thread_zext_ln544_fu_266_p1() {
    zext_ln544_fu_266_p1 = esl_zext<64,31>(constant_matrix_V_offset.read());
}

void aes_mix_columns84142::thread_zext_ln719_10_fu_630_p1() {
    zext_ln719_10_fu_630_p1 = esl_zext<64,63>(sext_ln719_5_fu_626_p1.read());
}

void aes_mix_columns84142::thread_zext_ln719_12_fu_685_p1() {
    zext_ln719_12_fu_685_p1 = esl_zext<64,63>(sext_ln719_6_fu_681_p1.read());
}

void aes_mix_columns84142::thread_zext_ln719_13_fu_564_p1() {
    zext_ln719_13_fu_564_p1 = esl_zext<18,16>(tmp_39_fu_557_p3.read());
}

void aes_mix_columns84142::thread_zext_ln719_14_fu_607_p1() {
    zext_ln719_14_fu_607_p1 = esl_zext<18,16>(shl_ln719_fu_602_p2.read());
}

void aes_mix_columns84142::thread_zext_ln719_15_fu_662_p1() {
    zext_ln719_15_fu_662_p1 = esl_zext<18,16>(tmp_45_fu_655_p3.read());
}

void aes_mix_columns84142::thread_zext_ln719_8_fu_587_p1() {
    zext_ln719_8_fu_587_p1 = esl_zext<64,63>(sext_ln719_fu_583_p1.read());
}

void aes_mix_columns84142::thread_zext_ln78_4_fu_532_p1() {
    zext_ln78_4_fu_532_p1 = esl_zext<64,63>(sext_ln78_fu_528_p1.read());
}

void aes_mix_columns84142::thread_zext_ln78_5_fu_509_p1() {
    zext_ln78_5_fu_509_p1 = esl_zext<18,16>(shl_ln78_fu_504_p2.read());
}

void aes_mix_columns84142::thread_zext_ln78_fu_270_p1() {
    zext_ln78_fu_270_p1 = esl_zext<64,31>(multiplication_V_offset.read());
}

void aes_mix_columns84142::thread_zext_ln99_fu_286_p1() {
    zext_ln99_fu_286_p1 = esl_zext<64,3>(column_index_0_reg_243.read());
}

void aes_mix_columns84142::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln96_fu_274_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln103_fu_337_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(m_axi_constant_matrix_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(m_axi_constant_matrix_V_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(m_axi_constant_matrix_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_block_state15_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(m_axi_constant_matrix_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, m_axi_constant_matrix_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_multiplication_V_RVALID.read())))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 4194304 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(m_axi_constant_matrix_V_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state24;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, m_axi_constant_matrix_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_multiplication_V_ARREADY.read())))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && esl_seteq<1,1,1>(m_axi_multiplication_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        case 33554432 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && esl_seteq<1,1,1>(m_axi_multiplication_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state27;
            } else {
                ap_NS_fsm = ap_ST_fsm_state26;
            }
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(m_axi_multiplication_V_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state32;
            } else {
                ap_NS_fsm = ap_ST_fsm_state31;
            }
            break;
        case 2147483648 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(m_axi_multiplication_V_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 4294967296 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && esl_seteq<1,1,1>(m_axi_multiplication_V_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state34;
            } else {
                ap_NS_fsm = ap_ST_fsm_state33;
            }
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<34>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

