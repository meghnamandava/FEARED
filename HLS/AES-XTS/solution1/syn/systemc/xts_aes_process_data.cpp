// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "xts_aes_process_data.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic xts_aes_process_data::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic xts_aes_process_data::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<15> xts_aes_process_data::ap_ST_fsm_state1 = "1";
const sc_lv<15> xts_aes_process_data::ap_ST_fsm_state2 = "10";
const sc_lv<15> xts_aes_process_data::ap_ST_fsm_state3 = "100";
const sc_lv<15> xts_aes_process_data::ap_ST_fsm_state4 = "1000";
const sc_lv<15> xts_aes_process_data::ap_ST_fsm_state5 = "10000";
const sc_lv<15> xts_aes_process_data::ap_ST_fsm_state6 = "100000";
const sc_lv<15> xts_aes_process_data::ap_ST_fsm_state7 = "1000000";
const sc_lv<15> xts_aes_process_data::ap_ST_fsm_state8 = "10000000";
const sc_lv<15> xts_aes_process_data::ap_ST_fsm_state9 = "100000000";
const sc_lv<15> xts_aes_process_data::ap_ST_fsm_state10 = "1000000000";
const sc_lv<15> xts_aes_process_data::ap_ST_fsm_state11 = "10000000000";
const sc_lv<15> xts_aes_process_data::ap_ST_fsm_state12 = "100000000000";
const sc_lv<15> xts_aes_process_data::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<15> xts_aes_process_data::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<15> xts_aes_process_data::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<32> xts_aes_process_data::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> xts_aes_process_data::ap_const_lv1_0 = "0";
const sc_lv<3> xts_aes_process_data::ap_const_lv3_0 = "000";
const sc_lv<2> xts_aes_process_data::ap_const_lv2_0 = "00";
const sc_lv<4> xts_aes_process_data::ap_const_lv4_0 = "0000";
const sc_lv<16> xts_aes_process_data::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> xts_aes_process_data::ap_const_lv32_8 = "1000";
const sc_lv<32> xts_aes_process_data::ap_const_lv32_6 = "110";
const sc_lv<32> xts_aes_process_data::ap_const_lv32_7 = "111";
const sc_lv<1> xts_aes_process_data::ap_const_lv1_1 = "1";
const sc_lv<32> xts_aes_process_data::ap_const_lv32_A = "1010";
const sc_lv<32> xts_aes_process_data::ap_const_lv32_C = "1100";
const sc_lv<32> xts_aes_process_data::ap_const_lv32_D = "1101";
const sc_lv<7> xts_aes_process_data::ap_const_lv7_0 = "0000000";
const sc_lv<32> xts_aes_process_data::ap_const_lv32_9 = "1001";
const sc_lv<5> xts_aes_process_data::ap_const_lv5_0 = "00000";
const sc_lv<32> xts_aes_process_data::ap_const_lv32_E = "1110";
const sc_lv<32> xts_aes_process_data::ap_const_lv32_B = "1011";
const sc_lv<64> xts_aes_process_data::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> xts_aes_process_data::ap_const_lv32_400 = "10000000000";
const sc_lv<7> xts_aes_process_data::ap_const_lv7_40 = "1000000";
const sc_lv<7> xts_aes_process_data::ap_const_lv7_1 = "1";
const sc_lv<5> xts_aes_process_data::ap_const_lv5_10 = "10000";
const sc_lv<5> xts_aes_process_data::ap_const_lv5_1 = "1";
const sc_lv<16> xts_aes_process_data::ap_const_lv16_87 = "10000111";
const bool xts_aes_process_data::ap_const_boolean_1 = true;

xts_aes_process_data::xts_aes_process_data(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_xts_aes_process_bloc_fu_199 = new xts_aes_process_bloc("grp_xts_aes_process_bloc_fu_199");
    grp_xts_aes_process_bloc_fu_199->ap_clk(ap_clk);
    grp_xts_aes_process_bloc_fu_199->ap_rst(ap_rst);
    grp_xts_aes_process_bloc_fu_199->ap_start(grp_xts_aes_process_bloc_fu_199_ap_start);
    grp_xts_aes_process_bloc_fu_199->ap_done(grp_xts_aes_process_bloc_fu_199_ap_done);
    grp_xts_aes_process_bloc_fu_199->ap_idle(grp_xts_aes_process_bloc_fu_199_ap_idle);
    grp_xts_aes_process_bloc_fu_199->ap_ready(grp_xts_aes_process_bloc_fu_199_ap_ready);
    grp_xts_aes_process_bloc_fu_199->block_V_address0(grp_xts_aes_process_bloc_fu_199_block_V_address0);
    grp_xts_aes_process_bloc_fu_199->block_V_ce0(grp_xts_aes_process_bloc_fu_199_block_V_ce0);
    grp_xts_aes_process_bloc_fu_199->block_V_we0(grp_xts_aes_process_bloc_fu_199_block_V_we0);
    grp_xts_aes_process_bloc_fu_199->block_V_d0(grp_xts_aes_process_bloc_fu_199_block_V_d0);
    grp_xts_aes_process_bloc_fu_199->block_V_q0(blocks_V_q0);
    grp_xts_aes_process_bloc_fu_199->block_V_offset(i_op_assign_reg_164);
    grp_xts_aes_process_bloc_fu_199->tweak_V_address0(grp_xts_aes_process_bloc_fu_199_tweak_V_address0);
    grp_xts_aes_process_bloc_fu_199->tweak_V_ce0(grp_xts_aes_process_bloc_fu_199_tweak_V_ce0);
    grp_xts_aes_process_bloc_fu_199->tweak_V_q0(tweak_V_q0);
    grp_xts_aes_process_bloc_fu_199->mode_V(mode_V);
    grp_xts_aes_process_bloc_fu_199->expanded_key_V_address0(grp_xts_aes_process_bloc_fu_199_expanded_key_V_address0);
    grp_xts_aes_process_bloc_fu_199->expanded_key_V_ce0(grp_xts_aes_process_bloc_fu_199_expanded_key_V_ce0);
    grp_xts_aes_process_bloc_fu_199->expanded_key_V_q0(expanded_key_V_q0);
    grp_xts_aes_process_bloc_fu_199->expanded_key_V_address1(grp_xts_aes_process_bloc_fu_199_expanded_key_V_address1);
    grp_xts_aes_process_bloc_fu_199->expanded_key_V_ce1(grp_xts_aes_process_bloc_fu_199_expanded_key_V_ce1);
    grp_xts_aes_process_bloc_fu_199->expanded_key_V_q1(expanded_key_V_q1);
    grp_xts_aes_process_bloc_fu_199->s_boxes_V_address0(grp_xts_aes_process_bloc_fu_199_s_boxes_V_address0);
    grp_xts_aes_process_bloc_fu_199->s_boxes_V_ce0(grp_xts_aes_process_bloc_fu_199_s_boxes_V_ce0);
    grp_xts_aes_process_bloc_fu_199->s_boxes_V_q0(s_boxes_V_q0);
    grp_xts_aes_process_bloc_fu_199->s_boxes_V_address1(grp_xts_aes_process_bloc_fu_199_s_boxes_V_address1);
    grp_xts_aes_process_bloc_fu_199->s_boxes_V_ce1(grp_xts_aes_process_bloc_fu_199_s_boxes_V_ce1);
    grp_xts_aes_process_bloc_fu_199->s_boxes_V_q1(s_boxes_V_q1);
    grp_xts_aes_process_bloc_fu_199->multiplication_V_address0(grp_xts_aes_process_bloc_fu_199_multiplication_V_address0);
    grp_xts_aes_process_bloc_fu_199->multiplication_V_ce0(grp_xts_aes_process_bloc_fu_199_multiplication_V_ce0);
    grp_xts_aes_process_bloc_fu_199->multiplication_V_q0(multiplication_V_q0);
    grp_xts_aes_process_bloc_fu_199->multiplication_V_address1(grp_xts_aes_process_bloc_fu_199_multiplication_V_address1);
    grp_xts_aes_process_bloc_fu_199->multiplication_V_ce1(grp_xts_aes_process_bloc_fu_199_multiplication_V_ce1);
    grp_xts_aes_process_bloc_fu_199->multiplication_V_q1(multiplication_V_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln180_fu_267_p2);
    sensitive << ( zext_ln301_reg_370 );
    sensitive << ( zext_ln180_1_fu_263_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state9);
    sensitive << ( m_axi_data_V_RVALID );
    sensitive << ( icmp_ln299_fu_251_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln306_fu_280_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_p_0111_0_i_phi_fu_180_p4);
    sensitive << ( p_0111_0_i_reg_176 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln306_fu_280_p2 );

    SC_METHOD(thread_blocks_V_address0);
    sensitive << ( grp_xts_aes_process_bloc_fu_199_block_V_address0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( zext_ln180_2_fu_272_p1 );

    SC_METHOD(thread_blocks_V_ce0);
    sensitive << ( grp_xts_aes_process_bloc_fu_199_block_V_ce0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_blocks_V_d0);
    sensitive << ( data_V_addr_read_reg_393 );
    sensitive << ( grp_xts_aes_process_bloc_fu_199_block_V_d0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_blocks_V_we0);
    sensitive << ( grp_xts_aes_process_bloc_fu_199_block_V_we0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_V_blk_n_AR);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_data_V_ARREADY );

    SC_METHOD(thread_data_V_blk_n_R);
    sensitive << ( m_axi_data_V_RVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln299_fu_251_p2 );

    SC_METHOD(thread_expanded_key_V_address0);
    sensitive << ( grp_xts_aes_process_bloc_fu_199_expanded_key_V_address0 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_expanded_key_V_address1);
    sensitive << ( grp_xts_aes_process_bloc_fu_199_expanded_key_V_address1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_expanded_key_V_ce0);
    sensitive << ( grp_xts_aes_process_bloc_fu_199_expanded_key_V_ce0 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_expanded_key_V_ce1);
    sensitive << ( grp_xts_aes_process_bloc_fu_199_expanded_key_V_ce1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_grp_xts_aes_process_bloc_fu_199_ap_start);
    sensitive << ( grp_xts_aes_process_bloc_fu_199_ap_start_reg );

    SC_METHOD(thread_i_1_fu_286_p2);
    sensitive << ( i_op_assign_reg_164 );

    SC_METHOD(thread_i_fu_233_p2);
    sensitive << ( i_0_reg_142 );

    SC_METHOD(thread_icmp_ln258_fu_297_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( j_0_i_reg_188 );

    SC_METHOD(thread_icmp_ln297_fu_227_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i_0_reg_142 );

    SC_METHOD(thread_icmp_ln299_fu_251_p2);
    sensitive << ( m_axi_data_V_RVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln299_fu_251_p2 );
    sensitive << ( j_0_reg_153 );

    SC_METHOD(thread_icmp_ln306_fu_280_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_op_assign_reg_164 );

    SC_METHOD(thread_icmp_ln887_fu_292_p2);
    sensitive << ( num_blocks_orig_V );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln306_fu_280_p2 );
    sensitive << ( zext_ln306_fu_276_p1 );

    SC_METHOD(thread_j_1_fu_303_p2);
    sensitive << ( j_0_i_reg_188 );

    SC_METHOD(thread_j_fu_257_p2);
    sensitive << ( j_0_reg_153 );

    SC_METHOD(thread_m_axi_data_V_ARADDR);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_data_V_ARREADY );
    sensitive << ( zext_ln180_fu_216_p1 );

    SC_METHOD(thread_m_axi_data_V_ARBURST);

    SC_METHOD(thread_m_axi_data_V_ARCACHE);

    SC_METHOD(thread_m_axi_data_V_ARID);

    SC_METHOD(thread_m_axi_data_V_ARLEN);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_data_V_ARREADY );

    SC_METHOD(thread_m_axi_data_V_ARLOCK);

    SC_METHOD(thread_m_axi_data_V_ARPROT);

    SC_METHOD(thread_m_axi_data_V_ARQOS);

    SC_METHOD(thread_m_axi_data_V_ARREGION);

    SC_METHOD(thread_m_axi_data_V_ARSIZE);

    SC_METHOD(thread_m_axi_data_V_ARUSER);

    SC_METHOD(thread_m_axi_data_V_ARVALID);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_data_V_ARREADY );

    SC_METHOD(thread_m_axi_data_V_AWADDR);

    SC_METHOD(thread_m_axi_data_V_AWBURST);

    SC_METHOD(thread_m_axi_data_V_AWCACHE);

    SC_METHOD(thread_m_axi_data_V_AWID);

    SC_METHOD(thread_m_axi_data_V_AWLEN);

    SC_METHOD(thread_m_axi_data_V_AWLOCK);

    SC_METHOD(thread_m_axi_data_V_AWPROT);

    SC_METHOD(thread_m_axi_data_V_AWQOS);

    SC_METHOD(thread_m_axi_data_V_AWREGION);

    SC_METHOD(thread_m_axi_data_V_AWSIZE);

    SC_METHOD(thread_m_axi_data_V_AWUSER);

    SC_METHOD(thread_m_axi_data_V_AWVALID);

    SC_METHOD(thread_m_axi_data_V_BREADY);

    SC_METHOD(thread_m_axi_data_V_RREADY);
    sensitive << ( m_axi_data_V_RVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln299_fu_251_p2 );

    SC_METHOD(thread_m_axi_data_V_WDATA);

    SC_METHOD(thread_m_axi_data_V_WID);

    SC_METHOD(thread_m_axi_data_V_WLAST);

    SC_METHOD(thread_m_axi_data_V_WSTRB);

    SC_METHOD(thread_m_axi_data_V_WUSER);

    SC_METHOD(thread_m_axi_data_V_WVALID);

    SC_METHOD(thread_multiplication_V_address0);
    sensitive << ( grp_xts_aes_process_bloc_fu_199_multiplication_V_address0 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_multiplication_V_address1);
    sensitive << ( grp_xts_aes_process_bloc_fu_199_multiplication_V_address1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_multiplication_V_ce0);
    sensitive << ( grp_xts_aes_process_bloc_fu_199_multiplication_V_ce0 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_multiplication_V_ce1);
    sensitive << ( grp_xts_aes_process_bloc_fu_199_multiplication_V_ce1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_or_ln_fu_326_p3);
    sensitive << ( p_0111_0_i_reg_176 );
    sensitive << ( trunc_ln68_fu_322_p1 );

    SC_METHOD(thread_s_boxes_V_address0);
    sensitive << ( grp_xts_aes_process_bloc_fu_199_s_boxes_V_address0 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_s_boxes_V_address1);
    sensitive << ( grp_xts_aes_process_bloc_fu_199_s_boxes_V_address1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_s_boxes_V_ce0);
    sensitive << ( grp_xts_aes_process_bloc_fu_199_s_boxes_V_ce0 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_s_boxes_V_ce1);
    sensitive << ( grp_xts_aes_process_bloc_fu_199_s_boxes_V_ce1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_tmp_1_fu_239_p3);
    sensitive << ( i_0_reg_142 );

    SC_METHOD(thread_trunc_ln68_fu_322_p1);
    sensitive << ( tweak_V_q0 );

    SC_METHOD(thread_tweak_V_address0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tweak_V_addr_1_reg_418 );
    sensitive << ( icmp_ln258_fu_297_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( grp_xts_aes_process_bloc_fu_199_tweak_V_address0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_phi_mux_p_0111_0_i_phi_fu_180_p4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( zext_ln260_fu_309_p1 );

    SC_METHOD(thread_tweak_V_ce0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( icmp_ln258_fu_297_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( grp_xts_aes_process_bloc_fu_199_tweak_V_ce0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_phi_mux_p_0111_0_i_phi_fu_180_p4 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_tweak_V_d0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( zext_ln68_fu_334_p1 );
    sensitive << ( xor_ln719_fu_339_p2 );

    SC_METHOD(thread_tweak_V_we0);
    sensitive << ( icmp_ln887_reg_406 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( p_0111_0_i_reg_176 );

    SC_METHOD(thread_xor_ln719_fu_339_p2);
    sensitive << ( tweak_V_q0 );

    SC_METHOD(thread_zext_ln180_1_fu_263_p1);
    sensitive << ( j_0_reg_153 );

    SC_METHOD(thread_zext_ln180_2_fu_272_p1);
    sensitive << ( add_ln180_reg_388 );

    SC_METHOD(thread_zext_ln180_fu_216_p1);
    sensitive << ( data_V_offset );

    SC_METHOD(thread_zext_ln260_fu_309_p1);
    sensitive << ( j_0_i_reg_188 );

    SC_METHOD(thread_zext_ln301_fu_247_p1);
    sensitive << ( tmp_1_fu_239_p3 );

    SC_METHOD(thread_zext_ln306_fu_276_p1);
    sensitive << ( i_op_assign_reg_164 );

    SC_METHOD(thread_zext_ln68_fu_334_p1);
    sensitive << ( or_ln_fu_326_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_data_V_ARREADY );
    sensitive << ( m_axi_data_V_RVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln299_fu_251_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln297_fu_227_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln887_fu_292_p2 );
    sensitive << ( icmp_ln306_fu_280_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( icmp_ln258_fu_297_p2 );
    sensitive << ( grp_xts_aes_process_bloc_fu_199_ap_done );
    sensitive << ( ap_CS_fsm_state12 );

    ap_CS_fsm = "000000000000001";
    grp_xts_aes_process_bloc_fu_199_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "xts_aes_process_data_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_data_V_AWVALID, "(port)m_axi_data_V_AWVALID");
    sc_trace(mVcdFile, m_axi_data_V_AWREADY, "(port)m_axi_data_V_AWREADY");
    sc_trace(mVcdFile, m_axi_data_V_AWADDR, "(port)m_axi_data_V_AWADDR");
    sc_trace(mVcdFile, m_axi_data_V_AWID, "(port)m_axi_data_V_AWID");
    sc_trace(mVcdFile, m_axi_data_V_AWLEN, "(port)m_axi_data_V_AWLEN");
    sc_trace(mVcdFile, m_axi_data_V_AWSIZE, "(port)m_axi_data_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_data_V_AWBURST, "(port)m_axi_data_V_AWBURST");
    sc_trace(mVcdFile, m_axi_data_V_AWLOCK, "(port)m_axi_data_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_data_V_AWCACHE, "(port)m_axi_data_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_data_V_AWPROT, "(port)m_axi_data_V_AWPROT");
    sc_trace(mVcdFile, m_axi_data_V_AWQOS, "(port)m_axi_data_V_AWQOS");
    sc_trace(mVcdFile, m_axi_data_V_AWREGION, "(port)m_axi_data_V_AWREGION");
    sc_trace(mVcdFile, m_axi_data_V_AWUSER, "(port)m_axi_data_V_AWUSER");
    sc_trace(mVcdFile, m_axi_data_V_WVALID, "(port)m_axi_data_V_WVALID");
    sc_trace(mVcdFile, m_axi_data_V_WREADY, "(port)m_axi_data_V_WREADY");
    sc_trace(mVcdFile, m_axi_data_V_WDATA, "(port)m_axi_data_V_WDATA");
    sc_trace(mVcdFile, m_axi_data_V_WSTRB, "(port)m_axi_data_V_WSTRB");
    sc_trace(mVcdFile, m_axi_data_V_WLAST, "(port)m_axi_data_V_WLAST");
    sc_trace(mVcdFile, m_axi_data_V_WID, "(port)m_axi_data_V_WID");
    sc_trace(mVcdFile, m_axi_data_V_WUSER, "(port)m_axi_data_V_WUSER");
    sc_trace(mVcdFile, m_axi_data_V_ARVALID, "(port)m_axi_data_V_ARVALID");
    sc_trace(mVcdFile, m_axi_data_V_ARREADY, "(port)m_axi_data_V_ARREADY");
    sc_trace(mVcdFile, m_axi_data_V_ARADDR, "(port)m_axi_data_V_ARADDR");
    sc_trace(mVcdFile, m_axi_data_V_ARID, "(port)m_axi_data_V_ARID");
    sc_trace(mVcdFile, m_axi_data_V_ARLEN, "(port)m_axi_data_V_ARLEN");
    sc_trace(mVcdFile, m_axi_data_V_ARSIZE, "(port)m_axi_data_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_data_V_ARBURST, "(port)m_axi_data_V_ARBURST");
    sc_trace(mVcdFile, m_axi_data_V_ARLOCK, "(port)m_axi_data_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_data_V_ARCACHE, "(port)m_axi_data_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_data_V_ARPROT, "(port)m_axi_data_V_ARPROT");
    sc_trace(mVcdFile, m_axi_data_V_ARQOS, "(port)m_axi_data_V_ARQOS");
    sc_trace(mVcdFile, m_axi_data_V_ARREGION, "(port)m_axi_data_V_ARREGION");
    sc_trace(mVcdFile, m_axi_data_V_ARUSER, "(port)m_axi_data_V_ARUSER");
    sc_trace(mVcdFile, m_axi_data_V_RVALID, "(port)m_axi_data_V_RVALID");
    sc_trace(mVcdFile, m_axi_data_V_RREADY, "(port)m_axi_data_V_RREADY");
    sc_trace(mVcdFile, m_axi_data_V_RDATA, "(port)m_axi_data_V_RDATA");
    sc_trace(mVcdFile, m_axi_data_V_RLAST, "(port)m_axi_data_V_RLAST");
    sc_trace(mVcdFile, m_axi_data_V_RID, "(port)m_axi_data_V_RID");
    sc_trace(mVcdFile, m_axi_data_V_RUSER, "(port)m_axi_data_V_RUSER");
    sc_trace(mVcdFile, m_axi_data_V_RRESP, "(port)m_axi_data_V_RRESP");
    sc_trace(mVcdFile, m_axi_data_V_BVALID, "(port)m_axi_data_V_BVALID");
    sc_trace(mVcdFile, m_axi_data_V_BREADY, "(port)m_axi_data_V_BREADY");
    sc_trace(mVcdFile, m_axi_data_V_BRESP, "(port)m_axi_data_V_BRESP");
    sc_trace(mVcdFile, m_axi_data_V_BID, "(port)m_axi_data_V_BID");
    sc_trace(mVcdFile, m_axi_data_V_BUSER, "(port)m_axi_data_V_BUSER");
    sc_trace(mVcdFile, data_V_offset, "(port)data_V_offset");
    sc_trace(mVcdFile, num_blocks_orig_V, "(port)num_blocks_orig_V");
    sc_trace(mVcdFile, mode_V, "(port)mode_V");
    sc_trace(mVcdFile, tweak_V_address0, "(port)tweak_V_address0");
    sc_trace(mVcdFile, tweak_V_ce0, "(port)tweak_V_ce0");
    sc_trace(mVcdFile, tweak_V_we0, "(port)tweak_V_we0");
    sc_trace(mVcdFile, tweak_V_d0, "(port)tweak_V_d0");
    sc_trace(mVcdFile, tweak_V_q0, "(port)tweak_V_q0");
    sc_trace(mVcdFile, expanded_key_V_address0, "(port)expanded_key_V_address0");
    sc_trace(mVcdFile, expanded_key_V_ce0, "(port)expanded_key_V_ce0");
    sc_trace(mVcdFile, expanded_key_V_q0, "(port)expanded_key_V_q0");
    sc_trace(mVcdFile, expanded_key_V_address1, "(port)expanded_key_V_address1");
    sc_trace(mVcdFile, expanded_key_V_ce1, "(port)expanded_key_V_ce1");
    sc_trace(mVcdFile, expanded_key_V_q1, "(port)expanded_key_V_q1");
    sc_trace(mVcdFile, s_boxes_V_address0, "(port)s_boxes_V_address0");
    sc_trace(mVcdFile, s_boxes_V_ce0, "(port)s_boxes_V_ce0");
    sc_trace(mVcdFile, s_boxes_V_q0, "(port)s_boxes_V_q0");
    sc_trace(mVcdFile, s_boxes_V_address1, "(port)s_boxes_V_address1");
    sc_trace(mVcdFile, s_boxes_V_ce1, "(port)s_boxes_V_ce1");
    sc_trace(mVcdFile, s_boxes_V_q1, "(port)s_boxes_V_q1");
    sc_trace(mVcdFile, multiplication_V_address0, "(port)multiplication_V_address0");
    sc_trace(mVcdFile, multiplication_V_ce0, "(port)multiplication_V_ce0");
    sc_trace(mVcdFile, multiplication_V_q0, "(port)multiplication_V_q0");
    sc_trace(mVcdFile, multiplication_V_address1, "(port)multiplication_V_address1");
    sc_trace(mVcdFile, multiplication_V_ce1, "(port)multiplication_V_ce1");
    sc_trace(mVcdFile, multiplication_V_q1, "(port)multiplication_V_q1");
    sc_trace(mVcdFile, blocks_V_address0, "(port)blocks_V_address0");
    sc_trace(mVcdFile, blocks_V_ce0, "(port)blocks_V_ce0");
    sc_trace(mVcdFile, blocks_V_we0, "(port)blocks_V_we0");
    sc_trace(mVcdFile, blocks_V_d0, "(port)blocks_V_d0");
    sc_trace(mVcdFile, blocks_V_q0, "(port)blocks_V_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, data_V_blk_n_AR, "data_V_blk_n_AR");
    sc_trace(mVcdFile, data_V_blk_n_R, "data_V_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, icmp_ln299_fu_251_p2, "icmp_ln299_fu_251_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_fu_233_p2, "i_fu_233_p2");
    sc_trace(mVcdFile, i_reg_365, "i_reg_365");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, zext_ln301_fu_247_p1, "zext_ln301_fu_247_p1");
    sc_trace(mVcdFile, zext_ln301_reg_370, "zext_ln301_reg_370");
    sc_trace(mVcdFile, icmp_ln297_fu_227_p2, "icmp_ln297_fu_227_p2");
    sc_trace(mVcdFile, j_fu_257_p2, "j_fu_257_p2");
    sc_trace(mVcdFile, j_reg_383, "j_reg_383");
    sc_trace(mVcdFile, ap_block_state9, "ap_block_state9");
    sc_trace(mVcdFile, add_ln180_fu_267_p2, "add_ln180_fu_267_p2");
    sc_trace(mVcdFile, add_ln180_reg_388, "add_ln180_reg_388");
    sc_trace(mVcdFile, data_V_addr_read_reg_393, "data_V_addr_read_reg_393");
    sc_trace(mVcdFile, i_1_fu_286_p2, "i_1_fu_286_p2");
    sc_trace(mVcdFile, i_1_reg_401, "i_1_reg_401");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, icmp_ln887_fu_292_p2, "icmp_ln887_fu_292_p2");
    sc_trace(mVcdFile, icmp_ln887_reg_406, "icmp_ln887_reg_406");
    sc_trace(mVcdFile, icmp_ln306_fu_280_p2, "icmp_ln306_fu_280_p2");
    sc_trace(mVcdFile, j_1_fu_303_p2, "j_1_fu_303_p2");
    sc_trace(mVcdFile, j_1_reg_413, "j_1_reg_413");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tweak_V_addr_1_reg_418, "tweak_V_addr_1_reg_418");
    sc_trace(mVcdFile, icmp_ln258_fu_297_p2, "icmp_ln258_fu_297_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_ap_start, "grp_xts_aes_process_bloc_fu_199_ap_start");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_ap_done, "grp_xts_aes_process_bloc_fu_199_ap_done");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_ap_idle, "grp_xts_aes_process_bloc_fu_199_ap_idle");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_ap_ready, "grp_xts_aes_process_bloc_fu_199_ap_ready");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_block_V_address0, "grp_xts_aes_process_bloc_fu_199_block_V_address0");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_block_V_ce0, "grp_xts_aes_process_bloc_fu_199_block_V_ce0");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_block_V_we0, "grp_xts_aes_process_bloc_fu_199_block_V_we0");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_block_V_d0, "grp_xts_aes_process_bloc_fu_199_block_V_d0");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_tweak_V_address0, "grp_xts_aes_process_bloc_fu_199_tweak_V_address0");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_tweak_V_ce0, "grp_xts_aes_process_bloc_fu_199_tweak_V_ce0");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_expanded_key_V_address0, "grp_xts_aes_process_bloc_fu_199_expanded_key_V_address0");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_expanded_key_V_ce0, "grp_xts_aes_process_bloc_fu_199_expanded_key_V_ce0");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_expanded_key_V_address1, "grp_xts_aes_process_bloc_fu_199_expanded_key_V_address1");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_expanded_key_V_ce1, "grp_xts_aes_process_bloc_fu_199_expanded_key_V_ce1");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_s_boxes_V_address0, "grp_xts_aes_process_bloc_fu_199_s_boxes_V_address0");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_s_boxes_V_ce0, "grp_xts_aes_process_bloc_fu_199_s_boxes_V_ce0");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_s_boxes_V_address1, "grp_xts_aes_process_bloc_fu_199_s_boxes_V_address1");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_s_boxes_V_ce1, "grp_xts_aes_process_bloc_fu_199_s_boxes_V_ce1");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_multiplication_V_address0, "grp_xts_aes_process_bloc_fu_199_multiplication_V_address0");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_multiplication_V_ce0, "grp_xts_aes_process_bloc_fu_199_multiplication_V_ce0");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_multiplication_V_address1, "grp_xts_aes_process_bloc_fu_199_multiplication_V_address1");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_multiplication_V_ce1, "grp_xts_aes_process_bloc_fu_199_multiplication_V_ce1");
    sc_trace(mVcdFile, i_0_reg_142, "i_0_reg_142");
    sc_trace(mVcdFile, j_0_reg_153, "j_0_reg_153");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, i_op_assign_reg_164, "i_op_assign_reg_164");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_phi_mux_p_0111_0_i_phi_fu_180_p4, "ap_phi_mux_p_0111_0_i_phi_fu_180_p4");
    sc_trace(mVcdFile, p_0111_0_i_reg_176, "p_0111_0_i_reg_176");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, j_0_i_reg_188, "j_0_i_reg_188");
    sc_trace(mVcdFile, grp_xts_aes_process_bloc_fu_199_ap_start_reg, "grp_xts_aes_process_bloc_fu_199_ap_start_reg");
    sc_trace(mVcdFile, zext_ln180_2_fu_272_p1, "zext_ln180_2_fu_272_p1");
    sc_trace(mVcdFile, zext_ln260_fu_309_p1, "zext_ln260_fu_309_p1");
    sc_trace(mVcdFile, zext_ln180_fu_216_p1, "zext_ln180_fu_216_p1");
    sc_trace(mVcdFile, zext_ln68_fu_334_p1, "zext_ln68_fu_334_p1");
    sc_trace(mVcdFile, xor_ln719_fu_339_p2, "xor_ln719_fu_339_p2");
    sc_trace(mVcdFile, tmp_1_fu_239_p3, "tmp_1_fu_239_p3");
    sc_trace(mVcdFile, zext_ln180_1_fu_263_p1, "zext_ln180_1_fu_263_p1");
    sc_trace(mVcdFile, zext_ln306_fu_276_p1, "zext_ln306_fu_276_p1");
    sc_trace(mVcdFile, trunc_ln68_fu_322_p1, "trunc_ln68_fu_322_p1");
    sc_trace(mVcdFile, or_ln_fu_326_p3, "or_ln_fu_326_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

xts_aes_process_data::~xts_aes_process_data() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_xts_aes_process_bloc_fu_199;
}

void xts_aes_process_data::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_xts_aes_process_bloc_fu_199_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln306_fu_280_p2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_fu_292_p2.read()))) {
            grp_xts_aes_process_bloc_fu_199_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_xts_aes_process_bloc_fu_199_ap_ready.read())) {
            grp_xts_aes_process_bloc_fu_199_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln299_fu_251_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_data_V_RVALID.read())) && 
         esl_seteq<1,1,1>(icmp_ln299_fu_251_p2.read(), ap_const_lv1_1))) {
        i_0_reg_142 = i_reg_365.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_0_reg_142 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln297_fu_227_p2.read(), ap_const_lv1_1))) {
        i_op_assign_reg_164 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        i_op_assign_reg_164 = i_1_reg_401.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        j_0_i_reg_188 = j_1_reg_413.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(grp_xts_aes_process_bloc_fu_199_ap_done.read(), ap_const_logic_1))) {
        j_0_i_reg_188 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln297_fu_227_p2.read()))) {
        j_0_reg_153 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        j_0_reg_153 = j_reg_383.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        p_0111_0_i_reg_176 = tweak_V_q0.read().range(7, 7);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(grp_xts_aes_process_bloc_fu_199_ap_done.read(), ap_const_logic_1))) {
        p_0111_0_i_reg_176 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln299_fu_251_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln299_fu_251_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_data_V_RVALID.read())))) {
        add_ln180_reg_388 = add_ln180_fu_267_p2.read();
        data_V_addr_read_reg_393 = m_axi_data_V_RDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_1_reg_401 = i_1_fu_286_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_reg_365 = i_fu_233_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln306_fu_280_p2.read()))) {
        icmp_ln887_reg_406 = icmp_ln887_fu_292_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        j_1_reg_413 = j_1_fu_303_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln299_fu_251_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_data_V_RVALID.read())))) {
        j_reg_383 = j_fu_257_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln258_fu_297_p2.read()))) {
        tweak_V_addr_1_reg_418 =  (sc_lv<4>) (zext_ln260_fu_309_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln297_fu_227_p2.read()))) {
        zext_ln301_reg_370 = zext_ln301_fu_247_p1.read();
    }
}

void xts_aes_process_data::thread_add_ln180_fu_267_p2() {
    add_ln180_fu_267_p2 = (!zext_ln301_reg_370.read().is_01() || !zext_ln180_1_fu_263_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln301_reg_370.read()) + sc_biguint<12>(zext_ln180_1_fu_263_p1.read()));
}

void xts_aes_process_data::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void xts_aes_process_data::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void xts_aes_process_data::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void xts_aes_process_data::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void xts_aes_process_data::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void xts_aes_process_data::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void xts_aes_process_data::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void xts_aes_process_data::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void xts_aes_process_data::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void xts_aes_process_data::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void xts_aes_process_data::thread_ap_block_state9() {
    ap_block_state9 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln299_fu_251_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_data_V_RVALID.read()));
}

void xts_aes_process_data::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln306_fu_280_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void xts_aes_process_data::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void xts_aes_process_data::thread_ap_phi_mux_p_0111_0_i_phi_fu_180_p4() {
    ap_phi_mux_p_0111_0_i_phi_fu_180_p4 = p_0111_0_i_reg_176.read();
}

void xts_aes_process_data::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln306_fu_280_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void xts_aes_process_data::thread_blocks_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        blocks_V_address0 =  (sc_lv<10>) (zext_ln180_2_fu_272_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        blocks_V_address0 = grp_xts_aes_process_bloc_fu_199_block_V_address0.read();
    } else {
        blocks_V_address0 = "XXXXXXXXXX";
    }
}

void xts_aes_process_data::thread_blocks_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        blocks_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        blocks_V_ce0 = grp_xts_aes_process_bloc_fu_199_block_V_ce0.read();
    } else {
        blocks_V_ce0 = ap_const_logic_0;
    }
}

void xts_aes_process_data::thread_blocks_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        blocks_V_d0 = data_V_addr_read_reg_393.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        blocks_V_d0 = grp_xts_aes_process_bloc_fu_199_block_V_d0.read();
    } else {
        blocks_V_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void xts_aes_process_data::thread_blocks_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        blocks_V_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        blocks_V_we0 = grp_xts_aes_process_bloc_fu_199_block_V_we0.read();
    } else {
        blocks_V_we0 = ap_const_logic_0;
    }
}

void xts_aes_process_data::thread_data_V_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        data_V_blk_n_AR = m_axi_data_V_ARREADY.read();
    } else {
        data_V_blk_n_AR = ap_const_logic_1;
    }
}

void xts_aes_process_data::thread_data_V_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln299_fu_251_p2.read()))) {
        data_V_blk_n_R = m_axi_data_V_RVALID.read();
    } else {
        data_V_blk_n_R = ap_const_logic_1;
    }
}

void xts_aes_process_data::thread_expanded_key_V_address0() {
    expanded_key_V_address0 = grp_xts_aes_process_bloc_fu_199_expanded_key_V_address0.read();
}

void xts_aes_process_data::thread_expanded_key_V_address1() {
    expanded_key_V_address1 = grp_xts_aes_process_bloc_fu_199_expanded_key_V_address1.read();
}

void xts_aes_process_data::thread_expanded_key_V_ce0() {
    expanded_key_V_ce0 = grp_xts_aes_process_bloc_fu_199_expanded_key_V_ce0.read();
}

void xts_aes_process_data::thread_expanded_key_V_ce1() {
    expanded_key_V_ce1 = grp_xts_aes_process_bloc_fu_199_expanded_key_V_ce1.read();
}

void xts_aes_process_data::thread_grp_xts_aes_process_bloc_fu_199_ap_start() {
    grp_xts_aes_process_bloc_fu_199_ap_start = grp_xts_aes_process_bloc_fu_199_ap_start_reg.read();
}

void xts_aes_process_data::thread_i_1_fu_286_p2() {
    i_1_fu_286_p2 = (!i_op_assign_reg_164.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_op_assign_reg_164.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void xts_aes_process_data::thread_i_fu_233_p2() {
    i_fu_233_p2 = (!i_0_reg_142.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_142.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void xts_aes_process_data::thread_icmp_ln258_fu_297_p2() {
    icmp_ln258_fu_297_p2 = (!j_0_i_reg_188.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(j_0_i_reg_188.read() == ap_const_lv5_10);
}

void xts_aes_process_data::thread_icmp_ln297_fu_227_p2() {
    icmp_ln297_fu_227_p2 = (!i_0_reg_142.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_142.read() == ap_const_lv7_40);
}

void xts_aes_process_data::thread_icmp_ln299_fu_251_p2() {
    icmp_ln299_fu_251_p2 = (!j_0_reg_153.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_153.read() == ap_const_lv5_10);
}

void xts_aes_process_data::thread_icmp_ln306_fu_280_p2() {
    icmp_ln306_fu_280_p2 = (!i_op_assign_reg_164.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_op_assign_reg_164.read() == ap_const_lv7_40);
}

void xts_aes_process_data::thread_icmp_ln887_fu_292_p2() {
    icmp_ln887_fu_292_p2 = (!zext_ln306_fu_276_p1.read().is_01() || !num_blocks_orig_V.read().is_01())? sc_lv<1>(): (sc_bigint<16>(zext_ln306_fu_276_p1.read()) < sc_bigint<16>(num_blocks_orig_V.read()));
}

void xts_aes_process_data::thread_j_1_fu_303_p2() {
    j_1_fu_303_p2 = (!j_0_i_reg_188.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_0_i_reg_188.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void xts_aes_process_data::thread_j_fu_257_p2() {
    j_fu_257_p2 = (!j_0_reg_153.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_0_reg_153.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void xts_aes_process_data::thread_m_axi_data_V_ARADDR() {
    m_axi_data_V_ARADDR =  (sc_lv<32>) (zext_ln180_fu_216_p1.read());
}

void xts_aes_process_data::thread_m_axi_data_V_ARBURST() {
    m_axi_data_V_ARBURST = ap_const_lv2_0;
}

void xts_aes_process_data::thread_m_axi_data_V_ARCACHE() {
    m_axi_data_V_ARCACHE = ap_const_lv4_0;
}

void xts_aes_process_data::thread_m_axi_data_V_ARID() {
    m_axi_data_V_ARID = ap_const_lv1_0;
}

void xts_aes_process_data::thread_m_axi_data_V_ARLEN() {
    m_axi_data_V_ARLEN = ap_const_lv32_400;
}

void xts_aes_process_data::thread_m_axi_data_V_ARLOCK() {
    m_axi_data_V_ARLOCK = ap_const_lv2_0;
}

void xts_aes_process_data::thread_m_axi_data_V_ARPROT() {
    m_axi_data_V_ARPROT = ap_const_lv3_0;
}

void xts_aes_process_data::thread_m_axi_data_V_ARQOS() {
    m_axi_data_V_ARQOS = ap_const_lv4_0;
}

void xts_aes_process_data::thread_m_axi_data_V_ARREGION() {
    m_axi_data_V_ARREGION = ap_const_lv4_0;
}

void xts_aes_process_data::thread_m_axi_data_V_ARSIZE() {
    m_axi_data_V_ARSIZE = ap_const_lv3_0;
}

void xts_aes_process_data::thread_m_axi_data_V_ARUSER() {
    m_axi_data_V_ARUSER = ap_const_lv1_0;
}

void xts_aes_process_data::thread_m_axi_data_V_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_data_V_ARREADY.read())))) {
        m_axi_data_V_ARVALID = ap_const_logic_1;
    } else {
        m_axi_data_V_ARVALID = ap_const_logic_0;
    }
}

void xts_aes_process_data::thread_m_axi_data_V_AWADDR() {
    m_axi_data_V_AWADDR = ap_const_lv32_0;
}

void xts_aes_process_data::thread_m_axi_data_V_AWBURST() {
    m_axi_data_V_AWBURST = ap_const_lv2_0;
}

void xts_aes_process_data::thread_m_axi_data_V_AWCACHE() {
    m_axi_data_V_AWCACHE = ap_const_lv4_0;
}

void xts_aes_process_data::thread_m_axi_data_V_AWID() {
    m_axi_data_V_AWID = ap_const_lv1_0;
}

void xts_aes_process_data::thread_m_axi_data_V_AWLEN() {
    m_axi_data_V_AWLEN = ap_const_lv32_0;
}

void xts_aes_process_data::thread_m_axi_data_V_AWLOCK() {
    m_axi_data_V_AWLOCK = ap_const_lv2_0;
}

void xts_aes_process_data::thread_m_axi_data_V_AWPROT() {
    m_axi_data_V_AWPROT = ap_const_lv3_0;
}

void xts_aes_process_data::thread_m_axi_data_V_AWQOS() {
    m_axi_data_V_AWQOS = ap_const_lv4_0;
}

void xts_aes_process_data::thread_m_axi_data_V_AWREGION() {
    m_axi_data_V_AWREGION = ap_const_lv4_0;
}

void xts_aes_process_data::thread_m_axi_data_V_AWSIZE() {
    m_axi_data_V_AWSIZE = ap_const_lv3_0;
}

void xts_aes_process_data::thread_m_axi_data_V_AWUSER() {
    m_axi_data_V_AWUSER = ap_const_lv1_0;
}

void xts_aes_process_data::thread_m_axi_data_V_AWVALID() {
    m_axi_data_V_AWVALID = ap_const_logic_0;
}

void xts_aes_process_data::thread_m_axi_data_V_BREADY() {
    m_axi_data_V_BREADY = ap_const_logic_0;
}

void xts_aes_process_data::thread_m_axi_data_V_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln299_fu_251_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln299_fu_251_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_data_V_RVALID.read())))) {
        m_axi_data_V_RREADY = ap_const_logic_1;
    } else {
        m_axi_data_V_RREADY = ap_const_logic_0;
    }
}

void xts_aes_process_data::thread_m_axi_data_V_WDATA() {
    m_axi_data_V_WDATA = ap_const_lv16_0;
}

void xts_aes_process_data::thread_m_axi_data_V_WID() {
    m_axi_data_V_WID = ap_const_lv1_0;
}

void xts_aes_process_data::thread_m_axi_data_V_WLAST() {
    m_axi_data_V_WLAST = ap_const_logic_0;
}

void xts_aes_process_data::thread_m_axi_data_V_WSTRB() {
    m_axi_data_V_WSTRB = ap_const_lv2_0;
}

void xts_aes_process_data::thread_m_axi_data_V_WUSER() {
    m_axi_data_V_WUSER = ap_const_lv1_0;
}

void xts_aes_process_data::thread_m_axi_data_V_WVALID() {
    m_axi_data_V_WVALID = ap_const_logic_0;
}

void xts_aes_process_data::thread_multiplication_V_address0() {
    multiplication_V_address0 = grp_xts_aes_process_bloc_fu_199_multiplication_V_address0.read();
}

void xts_aes_process_data::thread_multiplication_V_address1() {
    multiplication_V_address1 = grp_xts_aes_process_bloc_fu_199_multiplication_V_address1.read();
}

void xts_aes_process_data::thread_multiplication_V_ce0() {
    multiplication_V_ce0 = grp_xts_aes_process_bloc_fu_199_multiplication_V_ce0.read();
}

void xts_aes_process_data::thread_multiplication_V_ce1() {
    multiplication_V_ce1 = grp_xts_aes_process_bloc_fu_199_multiplication_V_ce1.read();
}

void xts_aes_process_data::thread_or_ln_fu_326_p3() {
    or_ln_fu_326_p3 = esl_concat<7,1>(trunc_ln68_fu_322_p1.read(), p_0111_0_i_reg_176.read());
}

void xts_aes_process_data::thread_s_boxes_V_address0() {
    s_boxes_V_address0 = grp_xts_aes_process_bloc_fu_199_s_boxes_V_address0.read();
}

void xts_aes_process_data::thread_s_boxes_V_address1() {
    s_boxes_V_address1 = grp_xts_aes_process_bloc_fu_199_s_boxes_V_address1.read();
}

void xts_aes_process_data::thread_s_boxes_V_ce0() {
    s_boxes_V_ce0 = grp_xts_aes_process_bloc_fu_199_s_boxes_V_ce0.read();
}

void xts_aes_process_data::thread_s_boxes_V_ce1() {
    s_boxes_V_ce1 = grp_xts_aes_process_bloc_fu_199_s_boxes_V_ce1.read();
}

void xts_aes_process_data::thread_tmp_1_fu_239_p3() {
    tmp_1_fu_239_p3 = esl_concat<7,4>(i_0_reg_142.read(), ap_const_lv4_0);
}

void xts_aes_process_data::thread_trunc_ln68_fu_322_p1() {
    trunc_ln68_fu_322_p1 = tweak_V_q0.read().range(7-1, 0);
}

void xts_aes_process_data::thread_tweak_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        tweak_V_address0 = tweak_V_addr_1_reg_418.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln258_fu_297_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_p_0111_0_i_phi_fu_180_p4.read())))) {
        tweak_V_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln258_fu_297_p2.read()))) {
        tweak_V_address0 =  (sc_lv<4>) (zext_ln260_fu_309_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tweak_V_address0 = grp_xts_aes_process_bloc_fu_199_tweak_V_address0.read();
    } else {
        tweak_V_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void xts_aes_process_data::thread_tweak_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln258_fu_297_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln258_fu_297_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_p_0111_0_i_phi_fu_180_p4.read())))) {
        tweak_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tweak_V_ce0 = grp_xts_aes_process_bloc_fu_199_tweak_V_ce0.read();
    } else {
        tweak_V_ce0 = ap_const_logic_0;
    }
}

void xts_aes_process_data::thread_tweak_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tweak_V_d0 = xor_ln719_fu_339_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        tweak_V_d0 = zext_ln68_fu_334_p1.read();
    } else {
        tweak_V_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void xts_aes_process_data::thread_tweak_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_reg_406.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, p_0111_0_i_reg_176.read())))) {
        tweak_V_we0 = ap_const_logic_1;
    } else {
        tweak_V_we0 = ap_const_logic_0;
    }
}

void xts_aes_process_data::thread_xor_ln719_fu_339_p2() {
    xor_ln719_fu_339_p2 = (tweak_V_q0.read() ^ ap_const_lv16_87);
}

void xts_aes_process_data::thread_zext_ln180_1_fu_263_p1() {
    zext_ln180_1_fu_263_p1 = esl_zext<12,5>(j_0_reg_153.read());
}

void xts_aes_process_data::thread_zext_ln180_2_fu_272_p1() {
    zext_ln180_2_fu_272_p1 = esl_zext<64,12>(add_ln180_reg_388.read());
}

void xts_aes_process_data::thread_zext_ln180_fu_216_p1() {
    zext_ln180_fu_216_p1 = esl_zext<64,31>(data_V_offset.read());
}

void xts_aes_process_data::thread_zext_ln260_fu_309_p1() {
    zext_ln260_fu_309_p1 = esl_zext<64,5>(j_0_i_reg_188.read());
}

void xts_aes_process_data::thread_zext_ln301_fu_247_p1() {
    zext_ln301_fu_247_p1 = esl_zext<12,11>(tmp_1_fu_239_p3.read());
}

void xts_aes_process_data::thread_zext_ln306_fu_276_p1() {
    zext_ln306_fu_276_p1 = esl_zext<16,7>(i_op_assign_reg_164.read());
}

void xts_aes_process_data::thread_zext_ln68_fu_334_p1() {
    zext_ln68_fu_334_p1 = esl_zext<16,8>(or_ln_fu_326_p3.read());
}

void xts_aes_process_data::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_data_V_ARREADY.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(icmp_ln297_fu_227_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln299_fu_251_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_data_V_RVALID.read())) && esl_seteq<1,1,1>(icmp_ln299_fu_251_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln299_fu_251_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln299_fu_251_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_data_V_RVALID.read())))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln306_fu_280_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln306_fu_280_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_fu_292_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(grp_xts_aes_process_bloc_fu_199_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln258_fu_297_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
            break;
    }
}

}

