// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aes_substitute_bytes_HH_
#define _aes_substitute_bytes_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct aes_substitute_bytes : public sc_module {
    // Port declarations 58
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > state_matrix_V_address0;
    sc_out< sc_logic > state_matrix_V_ce0;
    sc_out< sc_logic > state_matrix_V_we0;
    sc_out< sc_lv<16> > state_matrix_V_d0;
    sc_in< sc_lv<16> > state_matrix_V_q0;
    sc_out< sc_logic > m_axi_s_box_V_AWVALID;
    sc_in< sc_logic > m_axi_s_box_V_AWREADY;
    sc_out< sc_lv<32> > m_axi_s_box_V_AWADDR;
    sc_out< sc_lv<1> > m_axi_s_box_V_AWID;
    sc_out< sc_lv<32> > m_axi_s_box_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_s_box_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_s_box_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_s_box_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_s_box_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_s_box_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_s_box_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_s_box_V_AWREGION;
    sc_out< sc_lv<1> > m_axi_s_box_V_AWUSER;
    sc_out< sc_logic > m_axi_s_box_V_WVALID;
    sc_in< sc_logic > m_axi_s_box_V_WREADY;
    sc_out< sc_lv<8> > m_axi_s_box_V_WDATA;
    sc_out< sc_lv<1> > m_axi_s_box_V_WSTRB;
    sc_out< sc_logic > m_axi_s_box_V_WLAST;
    sc_out< sc_lv<1> > m_axi_s_box_V_WID;
    sc_out< sc_lv<1> > m_axi_s_box_V_WUSER;
    sc_out< sc_logic > m_axi_s_box_V_ARVALID;
    sc_in< sc_logic > m_axi_s_box_V_ARREADY;
    sc_out< sc_lv<32> > m_axi_s_box_V_ARADDR;
    sc_out< sc_lv<1> > m_axi_s_box_V_ARID;
    sc_out< sc_lv<32> > m_axi_s_box_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_s_box_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_s_box_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_s_box_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_s_box_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_s_box_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_s_box_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_s_box_V_ARREGION;
    sc_out< sc_lv<1> > m_axi_s_box_V_ARUSER;
    sc_in< sc_logic > m_axi_s_box_V_RVALID;
    sc_out< sc_logic > m_axi_s_box_V_RREADY;
    sc_in< sc_lv<8> > m_axi_s_box_V_RDATA;
    sc_in< sc_logic > m_axi_s_box_V_RLAST;
    sc_in< sc_lv<1> > m_axi_s_box_V_RID;
    sc_in< sc_lv<1> > m_axi_s_box_V_RUSER;
    sc_in< sc_lv<2> > m_axi_s_box_V_RRESP;
    sc_in< sc_logic > m_axi_s_box_V_BVALID;
    sc_out< sc_logic > m_axi_s_box_V_BREADY;
    sc_in< sc_lv<2> > m_axi_s_box_V_BRESP;
    sc_in< sc_lv<1> > m_axi_s_box_V_BID;
    sc_in< sc_lv<1> > m_axi_s_box_V_BUSER;
    sc_in< sc_lv<32> > s_box_V_offset;
    sc_in< sc_lv<2> > s_box_V_offset_offset;


    // Module declarations
    aes_substitute_bytes(sc_module_name name);
    SC_HAS_PROCESS(aes_substitute_bytes);

    ~aes_substitute_bytes();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<13> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > s_box_V_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > s_box_V_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<17> > sext_ln78_cast_fu_119_p1;
    sc_signal< sc_lv<17> > sext_ln78_cast_reg_209;
    sc_signal< sc_lv<33> > sext_ln41_fu_123_p1;
    sc_signal< sc_lv<33> > sext_ln41_reg_214;
    sc_signal< sc_lv<3> > row_index_fu_133_p2;
    sc_signal< sc_lv<3> > row_index_reg_222;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > zext_ln43_fu_147_p1;
    sc_signal< sc_lv<6> > zext_ln43_reg_227;
    sc_signal< sc_lv<1> > icmp_ln41_fu_127_p2;
    sc_signal< sc_lv<3> > column_index_fu_157_p2;
    sc_signal< sc_lv<3> > column_index_reg_235;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > state_matrix_V_addr_reg_240;
    sc_signal< sc_lv<1> > icmp_ln43_fu_151_p2;
    sc_signal< sc_lv<32> > s_box_V_addr_reg_245;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > s_box_V_addr_read_reg_251;
    sc_signal< sc_lv<3> > row_index_0_reg_89;
    sc_signal< sc_lv<3> > column_index_0_reg_100;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<64> > zext_ln45_1_fu_172_p1;
    sc_signal< sc_lv<64> > sext_ln78_2_fu_195_p1;
    sc_signal< sc_lv<10> > tmp_fu_111_p3;
    sc_signal< sc_lv<5> > tmp_4_fu_139_p3;
    sc_signal< sc_lv<6> > zext_ln45_fu_163_p1;
    sc_signal< sc_lv<6> > add_ln45_fu_167_p2;
    sc_signal< sc_lv<16> > sext_ln78_fu_177_p0;
    sc_signal< sc_lv<17> > sext_ln78_fu_177_p1;
    sc_signal< sc_lv<17> > add_ln78_fu_181_p2;
    sc_signal< sc_lv<33> > sext_ln78_1_fu_186_p1;
    sc_signal< sc_lv<33> > add_ln78_1_fu_190_p2;
    sc_signal< sc_lv<13> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<13> ap_ST_fsm_state1;
    static const sc_lv<13> ap_ST_fsm_state2;
    static const sc_lv<13> ap_ST_fsm_state3;
    static const sc_lv<13> ap_ST_fsm_state4;
    static const sc_lv<13> ap_ST_fsm_state5;
    static const sc_lv<13> ap_ST_fsm_state6;
    static const sc_lv<13> ap_ST_fsm_state7;
    static const sc_lv<13> ap_ST_fsm_state8;
    static const sc_lv<13> ap_ST_fsm_state9;
    static const sc_lv<13> ap_ST_fsm_state10;
    static const sc_lv<13> ap_ST_fsm_state11;
    static const sc_lv<13> ap_ST_fsm_state12;
    static const sc_lv<13> ap_ST_fsm_state13;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln45_fu_167_p2();
    void thread_add_ln78_1_fu_190_p2();
    void thread_add_ln78_fu_181_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_column_index_fu_157_p2();
    void thread_icmp_ln41_fu_127_p2();
    void thread_icmp_ln43_fu_151_p2();
    void thread_m_axi_s_box_V_ARADDR();
    void thread_m_axi_s_box_V_ARBURST();
    void thread_m_axi_s_box_V_ARCACHE();
    void thread_m_axi_s_box_V_ARID();
    void thread_m_axi_s_box_V_ARLEN();
    void thread_m_axi_s_box_V_ARLOCK();
    void thread_m_axi_s_box_V_ARPROT();
    void thread_m_axi_s_box_V_ARQOS();
    void thread_m_axi_s_box_V_ARREGION();
    void thread_m_axi_s_box_V_ARSIZE();
    void thread_m_axi_s_box_V_ARUSER();
    void thread_m_axi_s_box_V_ARVALID();
    void thread_m_axi_s_box_V_AWADDR();
    void thread_m_axi_s_box_V_AWBURST();
    void thread_m_axi_s_box_V_AWCACHE();
    void thread_m_axi_s_box_V_AWID();
    void thread_m_axi_s_box_V_AWLEN();
    void thread_m_axi_s_box_V_AWLOCK();
    void thread_m_axi_s_box_V_AWPROT();
    void thread_m_axi_s_box_V_AWQOS();
    void thread_m_axi_s_box_V_AWREGION();
    void thread_m_axi_s_box_V_AWSIZE();
    void thread_m_axi_s_box_V_AWUSER();
    void thread_m_axi_s_box_V_AWVALID();
    void thread_m_axi_s_box_V_BREADY();
    void thread_m_axi_s_box_V_RREADY();
    void thread_m_axi_s_box_V_WDATA();
    void thread_m_axi_s_box_V_WID();
    void thread_m_axi_s_box_V_WLAST();
    void thread_m_axi_s_box_V_WSTRB();
    void thread_m_axi_s_box_V_WUSER();
    void thread_m_axi_s_box_V_WVALID();
    void thread_row_index_fu_133_p2();
    void thread_s_box_V_blk_n_AR();
    void thread_s_box_V_blk_n_R();
    void thread_sext_ln41_fu_123_p1();
    void thread_sext_ln78_1_fu_186_p1();
    void thread_sext_ln78_2_fu_195_p1();
    void thread_sext_ln78_cast_fu_119_p1();
    void thread_sext_ln78_fu_177_p0();
    void thread_sext_ln78_fu_177_p1();
    void thread_state_matrix_V_address0();
    void thread_state_matrix_V_ce0();
    void thread_state_matrix_V_d0();
    void thread_state_matrix_V_we0();
    void thread_tmp_4_fu_139_p3();
    void thread_tmp_fu_111_p3();
    void thread_zext_ln43_fu_147_p1();
    void thread_zext_ln45_1_fu_172_p1();
    void thread_zext_ln45_fu_163_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
