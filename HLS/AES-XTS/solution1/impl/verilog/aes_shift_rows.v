// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module aes_shift_rows (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        state_matrix_V_address0,
        state_matrix_V_ce0,
        state_matrix_V_we0,
        state_matrix_V_d0,
        state_matrix_V_q0,
        state_matrix_V_address1,
        state_matrix_V_ce1,
        state_matrix_V_we1,
        state_matrix_V_d1,
        state_matrix_V_q1,
        round_factor
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] state_matrix_V_address0;
output   state_matrix_V_ce0;
output   state_matrix_V_we0;
output  [15:0] state_matrix_V_d0;
input  [15:0] state_matrix_V_q0;
output  [3:0] state_matrix_V_address1;
output   state_matrix_V_ce1;
output   state_matrix_V_we1;
output  [15:0] state_matrix_V_d1;
input  [15:0] state_matrix_V_q1;
input  [1:0] round_factor;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] state_matrix_V_address0;
reg state_matrix_V_ce0;
reg state_matrix_V_we0;
reg[15:0] state_matrix_V_d0;
reg[3:0] state_matrix_V_address1;
reg state_matrix_V_ce1;
reg state_matrix_V_we1;
reg[15:0] state_matrix_V_d1;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln65_fu_625_p2;
reg   [0:0] icmp_ln65_reg_860;
wire   [5:0] zext_ln180_4_fu_650_p1;
reg   [5:0] zext_ln180_4_reg_867;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln62_fu_631_p2;
reg   [3:0] state_matrix_V_addr_5_reg_873;
reg   [3:0] state_matrix_V_addr_6_reg_878;
reg   [3:0] state_matrix_V_addr_7_reg_883;
reg   [3:0] state_matrix_V_addr_8_reg_888;
wire   [2:0] sub_ln82_fu_699_p2;
reg   [2:0] sub_ln82_reg_893;
wire   [1:0] idx_subscript3_fu_715_p2;
reg   [1:0] idx_subscript3_reg_901;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln80_fu_709_p2;
wire   [1:0] trunc_ln87_fu_740_p1;
reg   [1:0] trunc_ln87_reg_911;
wire    ap_CS_fsm_state4;
wire   [1:0] idx_subscript4_fu_750_p2;
reg   [1:0] idx_subscript4_reg_926;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln85_fu_744_p2;
wire   [1:0] add_ln180_fu_769_p2;
reg   [1:0] add_ln180_reg_936;
wire   [1:0] idx_subscript2_fu_784_p2;
reg   [1:0] idx_subscript2_reg_943;
wire   [0:0] icmp_ln72_fu_778_p2;
wire   [1:0] sub_ln180_fu_803_p2;
reg   [1:0] sub_ln180_reg_953;
wire   [2:0] row_index_fu_808_p2;
reg   [2:0] row_index_reg_957;
wire   [1:0] add_ln62_fu_814_p2;
reg   [1:0] add_ln62_reg_962;
wire   [1:0] idx_subscript_fu_830_p2;
reg   [1:0] idx_subscript_reg_970;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln67_fu_824_p2;
wire   [1:0] trunc_ln74_fu_856_p1;
reg   [1:0] trunc_ln74_reg_980;
wire    ap_CS_fsm_state9;
reg   [15:0] temp_row_V_3_0_reg_133;
wire    ap_CS_fsm_state12;
reg   [15:0] temp_row_V_2_0_reg_145;
reg   [15:0] temp_row_V_1_9_reg_381;
reg   [15:0] temp_row_V_1_0_reg_157;
reg   [15:0] temp_row_V_0_5_reg_395;
reg   [15:0] temp_row_V_0_0_reg_169;
reg   [1:0] indvars_iv20_reg_181;
reg   [2:0] indvars_iv17_reg_193;
reg   [15:0] temp_row_V_2_5_reg_205;
wire    ap_CS_fsm_state5;
reg   [15:0] temp_row_V_1_5_reg_216;
reg   [15:0] temp_row_V_0_3_reg_227;
reg   [1:0] idx_subscript3_0_reg_238;
reg   [15:0] temp_row_V_2_5_be_reg_250;
reg   [15:0] temp_row_V_1_5_be_reg_265;
reg   [15:0] temp_row_V_0_3_be_reg_280;
reg   [15:0] temp_row_V_3_3_reg_295;
reg   [15:0] ap_phi_mux_temp_row_V_3_3_be_phi_fu_412_p6;
wire    ap_CS_fsm_state7;
reg   [15:0] temp_row_V_2_7_reg_306;
reg   [15:0] ap_phi_mux_temp_row_V_2_7_be_phi_fu_428_p6;
reg   [15:0] temp_row_V_1_7_reg_317;
reg   [15:0] ap_phi_mux_temp_row_V_1_7_be_phi_fu_444_p6;
reg   [1:0] idx_subscript4_0_reg_328;
reg   [15:0] temp_row_V_3_1_reg_339;
reg   [15:0] ap_phi_mux_temp_row_V_3_1_be_phi_fu_553_p6;
wire    ap_CS_fsm_state11;
reg   [15:0] temp_row_V_2_3_reg_350;
reg   [15:0] ap_phi_mux_temp_row_V_2_3_be_phi_fu_569_p6;
reg   [15:0] temp_row_V_1_3_reg_360;
reg   [15:0] ap_phi_mux_temp_row_V_1_3_be_phi_fu_585_p6;
reg   [1:0] idx_subscript2_0_reg_370;
reg   [15:0] ap_phi_mux_temp_row_V_1_9_phi_fu_385_p4;
reg   [15:0] ap_phi_mux_temp_row_V_0_5_phi_fu_399_p4;
reg   [15:0] temp_row_V_0_1_reg_480;
reg   [15:0] temp_row_V_2_1_reg_456;
wire    ap_CS_fsm_state10;
reg   [15:0] temp_row_V_1_1_reg_468;
reg   [1:0] idx_subscript_0_reg_492;
reg   [15:0] temp_row_V_2_1_be_reg_504;
reg   [15:0] temp_row_V_1_1_be_reg_519;
reg   [15:0] temp_row_V_0_1_be_reg_534;
reg   [15:0] temp_row_V_3_5_reg_597;
reg   [15:0] temp_row_V_2_9_reg_611;
wire   [63:0] zext_ln180_fu_645_p1;
wire   [63:0] tmp_s_fu_660_p3;
wire   [63:0] tmp_1_fu_675_p3;
wire   [63:0] tmp_2_fu_690_p3;
wire   [63:0] zext_ln180_8_fu_735_p1;
wire   [63:0] zext_ln180_3_fu_764_p1;
wire   [63:0] zext_ln180_2_fu_798_p1;
wire   [63:0] zext_ln180_6_fu_851_p1;
wire   [4:0] tmp_9_fu_637_p3;
wire   [4:0] or_ln180_fu_654_p2;
wire   [4:0] or_ln180_1_fu_669_p2;
wire   [4:0] or_ln180_2_fu_684_p2;
wire   [2:0] zext_ln80_fu_705_p1;
wire   [2:0] add_ln82_fu_721_p2;
wire   [5:0] zext_ln180_7_fu_726_p1;
wire   [5:0] add_ln180_2_fu_730_p2;
wire   [4:0] tmp_4_fu_756_p3;
wire   [2:0] zext_ln72_fu_774_p1;
wire   [4:0] tmp_3_fu_790_p3;
wire   [2:0] zext_ln67_fu_820_p1;
wire   [2:0] add_ln69_fu_836_p2;
wire   [5:0] zext_ln180_5_fu_842_p1;
wire   [5:0] add_ln180_1_fu_846_p2;
reg   [11:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        idx_subscript2_0_reg_370 <= idx_subscript2_reg_943;
    end else if (((icmp_ln67_fu_824_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        idx_subscript2_0_reg_370 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        idx_subscript3_0_reg_238 <= idx_subscript3_reg_901;
    end else if (((icmp_ln62_fu_631_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        idx_subscript3_0_reg_238 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        idx_subscript4_0_reg_328 <= idx_subscript4_reg_926;
    end else if (((icmp_ln80_fu_709_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        idx_subscript4_0_reg_328 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        idx_subscript_0_reg_492 <= idx_subscript_reg_970;
    end else if (((icmp_ln62_fu_631_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        idx_subscript_0_reg_492 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        indvars_iv17_reg_193 <= row_index_reg_957;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvars_iv17_reg_193 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        indvars_iv20_reg_181 <= add_ln62_reg_962;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvars_iv20_reg_181 <= 2'd3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (idx_subscript_0_reg_492 == 2'd0))) begin
        temp_row_V_0_1_be_reg_534 <= state_matrix_V_q1;
    end else if ((((idx_subscript_0_reg_492 == 2'd1) & (1'b1 == ap_CS_fsm_state9)) | (~(idx_subscript_0_reg_492 == 2'd1) & ~(idx_subscript_0_reg_492 == 2'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        temp_row_V_0_1_be_reg_534 <= temp_row_V_0_1_reg_480;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_row_V_0_1_reg_480 <= temp_row_V_0_1_be_reg_534;
    end else if (((icmp_ln62_fu_631_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        temp_row_V_0_1_reg_480 <= temp_row_V_0_0_reg_169;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (idx_subscript3_0_reg_238 == 2'd0))) begin
        temp_row_V_0_3_be_reg_280 <= state_matrix_V_q0;
    end else if ((((1'b1 == ap_CS_fsm_state4) & (idx_subscript3_0_reg_238 == 2'd1)) | (~(idx_subscript3_0_reg_238 == 2'd1) & ~(idx_subscript3_0_reg_238 == 2'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        temp_row_V_0_3_be_reg_280 <= temp_row_V_0_3_reg_227;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        temp_row_V_0_3_reg_227 <= temp_row_V_0_3_be_reg_280;
    end else if (((icmp_ln62_fu_631_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        temp_row_V_0_3_reg_227 <= temp_row_V_0_0_reg_169;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if (((icmp_ln72_fu_778_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd1))) begin
            temp_row_V_0_5_reg_395 <= temp_row_V_0_1_reg_480;
        end else if (((icmp_ln85_fu_744_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd0))) begin
            temp_row_V_0_5_reg_395 <= temp_row_V_0_3_reg_227;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((idx_subscript_0_reg_492 == 2'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        temp_row_V_1_1_be_reg_519 <= state_matrix_V_q1;
    end else if (((~(idx_subscript_0_reg_492 == 2'd1) & ~(idx_subscript_0_reg_492 == 2'd0) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == ap_CS_fsm_state9) & (idx_subscript_0_reg_492 == 2'd0)))) begin
        temp_row_V_1_1_be_reg_519 <= temp_row_V_1_1_reg_468;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_row_V_1_1_reg_468 <= temp_row_V_1_1_be_reg_519;
    end else if (((icmp_ln62_fu_631_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        temp_row_V_1_1_reg_468 <= temp_row_V_1_0_reg_157;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        temp_row_V_1_3_reg_360 <= ap_phi_mux_temp_row_V_1_3_be_phi_fu_585_p6;
    end else if (((icmp_ln67_fu_824_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        temp_row_V_1_3_reg_360 <= temp_row_V_1_1_reg_468;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (idx_subscript3_0_reg_238 == 2'd1))) begin
        temp_row_V_1_5_be_reg_265 <= state_matrix_V_q0;
    end else if (((~(idx_subscript3_0_reg_238 == 2'd1) & ~(idx_subscript3_0_reg_238 == 2'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == ap_CS_fsm_state4) & (idx_subscript3_0_reg_238 == 2'd0)))) begin
        temp_row_V_1_5_be_reg_265 <= temp_row_V_1_5_reg_216;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        temp_row_V_1_5_reg_216 <= temp_row_V_1_5_be_reg_265;
    end else if (((icmp_ln62_fu_631_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        temp_row_V_1_5_reg_216 <= temp_row_V_1_0_reg_157;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_row_V_1_7_reg_317 <= ap_phi_mux_temp_row_V_1_7_be_phi_fu_444_p6;
    end else if (((icmp_ln80_fu_709_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        temp_row_V_1_7_reg_317 <= temp_row_V_1_5_reg_216;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if (((icmp_ln72_fu_778_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd1))) begin
            temp_row_V_1_9_reg_381 <= temp_row_V_1_3_reg_360;
        end else if (((icmp_ln85_fu_744_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd0))) begin
            temp_row_V_1_9_reg_381 <= temp_row_V_1_7_reg_317;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((idx_subscript_0_reg_492 == 2'd1) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == ap_CS_fsm_state9) & (idx_subscript_0_reg_492 == 2'd0)))) begin
        temp_row_V_2_1_be_reg_504 <= temp_row_V_2_1_reg_456;
    end else if ((~(idx_subscript_0_reg_492 == 2'd1) & ~(idx_subscript_0_reg_492 == 2'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        temp_row_V_2_1_be_reg_504 <= state_matrix_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_row_V_2_1_reg_456 <= temp_row_V_2_1_be_reg_504;
    end else if (((icmp_ln62_fu_631_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        temp_row_V_2_1_reg_456 <= temp_row_V_2_0_reg_145;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        temp_row_V_2_3_reg_350 <= ap_phi_mux_temp_row_V_2_3_be_phi_fu_569_p6;
    end else if (((icmp_ln67_fu_824_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        temp_row_V_2_3_reg_350 <= temp_row_V_2_1_reg_456;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (idx_subscript3_0_reg_238 == 2'd1)) | ((1'b1 == ap_CS_fsm_state4) & (idx_subscript3_0_reg_238 == 2'd0)))) begin
        temp_row_V_2_5_be_reg_250 <= temp_row_V_2_5_reg_205;
    end else if ((~(idx_subscript3_0_reg_238 == 2'd1) & ~(idx_subscript3_0_reg_238 == 2'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        temp_row_V_2_5_be_reg_250 <= state_matrix_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        temp_row_V_2_5_reg_205 <= temp_row_V_2_5_be_reg_250;
    end else if (((icmp_ln62_fu_631_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        temp_row_V_2_5_reg_205 <= temp_row_V_2_0_reg_145;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_row_V_2_7_reg_306 <= ap_phi_mux_temp_row_V_2_7_be_phi_fu_428_p6;
    end else if (((icmp_ln80_fu_709_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        temp_row_V_2_7_reg_306 <= temp_row_V_2_5_reg_205;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if (((icmp_ln72_fu_778_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd1))) begin
            temp_row_V_2_9_reg_611 <= temp_row_V_2_3_reg_350;
        end else if (((icmp_ln85_fu_744_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd0))) begin
            temp_row_V_2_9_reg_611 <= temp_row_V_2_7_reg_306;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        temp_row_V_3_1_reg_339 <= ap_phi_mux_temp_row_V_3_1_be_phi_fu_553_p6;
    end else if (((icmp_ln67_fu_824_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        temp_row_V_3_1_reg_339 <= temp_row_V_3_0_reg_133;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_row_V_3_3_reg_295 <= ap_phi_mux_temp_row_V_3_3_be_phi_fu_412_p6;
    end else if (((icmp_ln80_fu_709_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        temp_row_V_3_3_reg_295 <= temp_row_V_3_0_reg_133;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if (((icmp_ln72_fu_778_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd1))) begin
            temp_row_V_3_5_reg_597 <= temp_row_V_3_1_reg_339;
        end else if (((icmp_ln85_fu_744_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd0))) begin
            temp_row_V_3_5_reg_597 <= temp_row_V_3_3_reg_295;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln85_fu_744_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        add_ln180_reg_936 <= add_ln180_fu_769_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (((icmp_ln85_fu_744_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd0)) | ((icmp_ln72_fu_778_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd1))))) begin
        add_ln62_reg_962 <= add_ln62_fu_814_p2;
        row_index_reg_957 <= row_index_fu_808_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        icmp_ln65_reg_860 <= icmp_ln65_fu_625_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_reg_860 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        idx_subscript2_reg_943 <= idx_subscript2_fu_784_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        idx_subscript3_reg_901 <= idx_subscript3_fu_715_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_reg_860 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        idx_subscript4_reg_926 <= idx_subscript4_fu_750_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        idx_subscript_reg_970 <= idx_subscript_fu_830_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln62_fu_631_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        state_matrix_V_addr_5_reg_873[3 : 2] <= zext_ln180_fu_645_p1[3 : 2];
        state_matrix_V_addr_6_reg_878[3 : 2] <= tmp_s_fu_660_p3[3 : 2];
        state_matrix_V_addr_7_reg_883[3 : 2] <= tmp_1_fu_675_p3[3 : 2];
        state_matrix_V_addr_8_reg_888[3 : 2] <= tmp_2_fu_690_p3[3 : 2];
        zext_ln180_4_reg_867[4 : 2] <= zext_ln180_4_fu_650_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_fu_778_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        sub_ln180_reg_953 <= sub_ln180_fu_803_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln62_fu_631_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        sub_ln82_reg_893 <= sub_ln82_fu_699_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_row_V_0_0_reg_169 <= temp_row_V_0_5_reg_395;
        temp_row_V_1_0_reg_157 <= temp_row_V_1_9_reg_381;
        temp_row_V_2_0_reg_145 <= temp_row_V_2_9_reg_611;
        temp_row_V_3_0_reg_133 <= temp_row_V_3_5_reg_597;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_fu_824_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        trunc_ln74_reg_980 <= trunc_ln74_fu_856_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_fu_709_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        trunc_ln87_reg_911 <= trunc_ln87_fu_740_p1;
    end
end

always @ (*) begin
    if ((((icmp_ln62_fu_631_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if (((icmp_ln72_fu_778_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd1))) begin
            ap_phi_mux_temp_row_V_0_5_phi_fu_399_p4 = temp_row_V_0_1_reg_480;
        end else if (((icmp_ln85_fu_744_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd0))) begin
            ap_phi_mux_temp_row_V_0_5_phi_fu_399_p4 = temp_row_V_0_3_reg_227;
        end else begin
            ap_phi_mux_temp_row_V_0_5_phi_fu_399_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_temp_row_V_0_5_phi_fu_399_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (sub_ln180_reg_953 == 2'd1))) begin
        ap_phi_mux_temp_row_V_1_3_be_phi_fu_585_p6 = state_matrix_V_q0;
    end else if ((((1'b1 == ap_CS_fsm_state11) & (sub_ln180_reg_953 == 2'd2)) | (~(sub_ln180_reg_953 == 2'd2) & ~(sub_ln180_reg_953 == 2'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        ap_phi_mux_temp_row_V_1_3_be_phi_fu_585_p6 = temp_row_V_1_3_reg_360;
    end else begin
        ap_phi_mux_temp_row_V_1_3_be_phi_fu_585_p6 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (2'd1 == add_ln180_reg_936))) begin
        ap_phi_mux_temp_row_V_1_7_be_phi_fu_444_p6 = state_matrix_V_q0;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (2'd2 == add_ln180_reg_936)) | (~(2'd2 == add_ln180_reg_936) & ~(2'd1 == add_ln180_reg_936) & (1'b1 == ap_CS_fsm_state7)))) begin
        ap_phi_mux_temp_row_V_1_7_be_phi_fu_444_p6 = temp_row_V_1_7_reg_317;
    end else begin
        ap_phi_mux_temp_row_V_1_7_be_phi_fu_444_p6 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if (((icmp_ln72_fu_778_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd1))) begin
            ap_phi_mux_temp_row_V_1_9_phi_fu_385_p4 = temp_row_V_1_3_reg_360;
        end else if (((icmp_ln85_fu_744_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd0))) begin
            ap_phi_mux_temp_row_V_1_9_phi_fu_385_p4 = temp_row_V_1_7_reg_317;
        end else begin
            ap_phi_mux_temp_row_V_1_9_phi_fu_385_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_temp_row_V_1_9_phi_fu_385_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (sub_ln180_reg_953 == 2'd2))) begin
        ap_phi_mux_temp_row_V_2_3_be_phi_fu_569_p6 = state_matrix_V_q0;
    end else if (((~(sub_ln180_reg_953 == 2'd2) & ~(sub_ln180_reg_953 == 2'd1) & (1'b1 == ap_CS_fsm_state11)) | ((1'b1 == ap_CS_fsm_state11) & (sub_ln180_reg_953 == 2'd1)))) begin
        ap_phi_mux_temp_row_V_2_3_be_phi_fu_569_p6 = temp_row_V_2_3_reg_350;
    end else begin
        ap_phi_mux_temp_row_V_2_3_be_phi_fu_569_p6 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (2'd2 == add_ln180_reg_936))) begin
        ap_phi_mux_temp_row_V_2_7_be_phi_fu_428_p6 = state_matrix_V_q0;
    end else if (((~(2'd2 == add_ln180_reg_936) & ~(2'd1 == add_ln180_reg_936) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == ap_CS_fsm_state7) & (2'd1 == add_ln180_reg_936)))) begin
        ap_phi_mux_temp_row_V_2_7_be_phi_fu_428_p6 = temp_row_V_2_7_reg_306;
    end else begin
        ap_phi_mux_temp_row_V_2_7_be_phi_fu_428_p6 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (sub_ln180_reg_953 == 2'd2)) | ((1'b1 == ap_CS_fsm_state11) & (sub_ln180_reg_953 == 2'd1)))) begin
        ap_phi_mux_temp_row_V_3_1_be_phi_fu_553_p6 = temp_row_V_3_1_reg_339;
    end else if ((~(sub_ln180_reg_953 == 2'd2) & ~(sub_ln180_reg_953 == 2'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_phi_mux_temp_row_V_3_1_be_phi_fu_553_p6 = state_matrix_V_q0;
    end else begin
        ap_phi_mux_temp_row_V_3_1_be_phi_fu_553_p6 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (2'd2 == add_ln180_reg_936)) | ((1'b1 == ap_CS_fsm_state7) & (2'd1 == add_ln180_reg_936)))) begin
        ap_phi_mux_temp_row_V_3_3_be_phi_fu_412_p6 = temp_row_V_3_3_reg_295;
    end else if ((~(2'd2 == add_ln180_reg_936) & ~(2'd1 == add_ln180_reg_936) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_phi_mux_temp_row_V_3_3_be_phi_fu_412_p6 = state_matrix_V_q0;
    end else begin
        ap_phi_mux_temp_row_V_3_3_be_phi_fu_412_p6 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_631_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        state_matrix_V_address0 = state_matrix_V_addr_8_reg_888;
    end else if (((1'b1 == ap_CS_fsm_state6) & (((icmp_ln85_fu_744_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd0)) | ((icmp_ln72_fu_778_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd1))))) begin
        state_matrix_V_address0 = state_matrix_V_addr_5_reg_873;
    end else if (((icmp_ln72_fu_778_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        state_matrix_V_address0 = zext_ln180_2_fu_798_p1;
    end else if (((icmp_ln85_fu_744_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        state_matrix_V_address0 = zext_ln180_3_fu_764_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        state_matrix_V_address0 = zext_ln180_8_fu_735_p1;
    end else begin
        state_matrix_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        state_matrix_V_address1 = state_matrix_V_addr_7_reg_883;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_matrix_V_address1 = zext_ln180_6_fu_851_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        state_matrix_V_address1 = state_matrix_V_addr_6_reg_878;
    end else begin
        state_matrix_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln85_fu_744_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ap_CS_fsm_state6) & (((icmp_ln85_fu_744_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd0)) | ((icmp_ln72_fu_778_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd1)))) | ((icmp_ln72_fu_778_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd1) & (1'b1 == ap_CS_fsm_state6)))) begin
        state_matrix_V_ce0 = 1'b1;
    end else begin
        state_matrix_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        state_matrix_V_ce1 = 1'b1;
    end else begin
        state_matrix_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        state_matrix_V_d0 = temp_row_V_3_5_reg_597;
    end else if (((1'b1 == ap_CS_fsm_state6) & (((icmp_ln85_fu_744_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd0)) | ((icmp_ln72_fu_778_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd1))))) begin
        state_matrix_V_d0 = ap_phi_mux_temp_row_V_0_5_phi_fu_399_p4;
    end else begin
        state_matrix_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        state_matrix_V_d1 = temp_row_V_2_9_reg_611;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        state_matrix_V_d1 = ap_phi_mux_temp_row_V_1_9_phi_fu_385_p4;
    end else begin
        state_matrix_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state6) & (((icmp_ln85_fu_744_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd0)) | ((icmp_ln72_fu_778_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd1)))))) begin
        state_matrix_V_we0 = 1'b1;
    end else begin
        state_matrix_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state6) & (((icmp_ln85_fu_744_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd0)) | ((icmp_ln72_fu_778_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd1)))))) begin
        state_matrix_V_we1 = 1'b1;
    end else begin
        state_matrix_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln62_fu_631_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln62_fu_631_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln80_fu_709_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln72_fu_778_p2 == 1'd0) & (icmp_ln65_reg_860 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b1 == ap_CS_fsm_state6) & (((icmp_ln85_fu_744_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd0)) | ((icmp_ln72_fu_778_p2 == 1'd1) & (icmp_ln65_reg_860 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln67_fu_824_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln180_1_fu_846_p2 = (zext_ln180_4_reg_867 + zext_ln180_5_fu_842_p1);

assign add_ln180_2_fu_730_p2 = (zext_ln180_4_reg_867 + zext_ln180_7_fu_726_p1);

assign add_ln180_fu_769_p2 = (trunc_ln87_reg_911 + idx_subscript4_0_reg_328);

assign add_ln62_fu_814_p2 = ($signed(indvars_iv20_reg_181) + $signed(2'd3));

assign add_ln69_fu_836_p2 = (zext_ln67_fu_820_p1 + indvars_iv17_reg_193);

assign add_ln82_fu_721_p2 = (sub_ln82_reg_893 + zext_ln80_fu_705_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign icmp_ln62_fu_631_p2 = ((indvars_iv17_reg_193 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_625_p2 = ((round_factor == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_824_p2 = ((idx_subscript_0_reg_492 == indvars_iv20_reg_181) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_778_p2 = ((zext_ln72_fu_774_p1 == indvars_iv17_reg_193) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_709_p2 = ((zext_ln80_fu_705_p1 == indvars_iv17_reg_193) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_744_p2 = ((idx_subscript4_0_reg_328 == indvars_iv20_reg_181) ? 1'b1 : 1'b0);

assign idx_subscript2_fu_784_p2 = (idx_subscript2_0_reg_370 + 2'd1);

assign idx_subscript3_fu_715_p2 = (idx_subscript3_0_reg_238 + 2'd1);

assign idx_subscript4_fu_750_p2 = (idx_subscript4_0_reg_328 + 2'd1);

assign idx_subscript_fu_830_p2 = (idx_subscript_0_reg_492 + 2'd1);

assign or_ln180_1_fu_669_p2 = (tmp_9_fu_637_p3 | 5'd2);

assign or_ln180_2_fu_684_p2 = (tmp_9_fu_637_p3 | 5'd3);

assign or_ln180_fu_654_p2 = (tmp_9_fu_637_p3 | 5'd1);

assign row_index_fu_808_p2 = (indvars_iv17_reg_193 + 3'd1);

assign sub_ln180_fu_803_p2 = (idx_subscript2_0_reg_370 - trunc_ln74_reg_980);

assign sub_ln82_fu_699_p2 = ($signed(3'd4) - $signed(indvars_iv17_reg_193));

assign tmp_1_fu_675_p3 = {{59'd0}, {or_ln180_1_fu_669_p2}};

assign tmp_2_fu_690_p3 = {{59'd0}, {or_ln180_2_fu_684_p2}};

assign tmp_3_fu_790_p3 = {{indvars_iv17_reg_193}, {idx_subscript2_0_reg_370}};

assign tmp_4_fu_756_p3 = {{indvars_iv17_reg_193}, {idx_subscript4_0_reg_328}};

assign tmp_9_fu_637_p3 = {{indvars_iv17_reg_193}, {2'd0}};

assign tmp_s_fu_660_p3 = {{59'd0}, {or_ln180_fu_654_p2}};

assign trunc_ln74_fu_856_p1 = indvars_iv17_reg_193[1:0];

assign trunc_ln87_fu_740_p1 = indvars_iv17_reg_193[1:0];

assign zext_ln180_2_fu_798_p1 = tmp_3_fu_790_p3;

assign zext_ln180_3_fu_764_p1 = tmp_4_fu_756_p3;

assign zext_ln180_4_fu_650_p1 = tmp_9_fu_637_p3;

assign zext_ln180_5_fu_842_p1 = add_ln69_fu_836_p2;

assign zext_ln180_6_fu_851_p1 = add_ln180_1_fu_846_p2;

assign zext_ln180_7_fu_726_p1 = add_ln82_fu_721_p2;

assign zext_ln180_8_fu_735_p1 = add_ln180_2_fu_730_p2;

assign zext_ln180_fu_645_p1 = tmp_9_fu_637_p3;

assign zext_ln67_fu_820_p1 = idx_subscript_0_reg_492;

assign zext_ln72_fu_774_p1 = idx_subscript2_0_reg_370;

assign zext_ln80_fu_705_p1 = idx_subscript3_0_reg_238;

always @ (posedge ap_clk) begin
    zext_ln180_4_reg_867[1:0] <= 2'b00;
    zext_ln180_4_reg_867[5] <= 1'b0;
    state_matrix_V_addr_5_reg_873[1:0] <= 2'b00;
    state_matrix_V_addr_6_reg_878[1:0] <= 2'b01;
    state_matrix_V_addr_7_reg_883[1:0] <= 2'b10;
    state_matrix_V_addr_8_reg_888[1:0] <= 2'b11;
end

endmodule //aes_shift_rows
